{"version":3,"sources":["ddzsingle_robot_typejudger.js"],"names":["ddz","AITypeJudger","cc","Class","judgeType","arr","dicarr","newarr","lz_obj","laiZiCnt","types","len","length","_is1","_isRocket","_is2","_is3","_isBomb","_is31","_is32","_is411","_is422","_is3311","_is3322","_is333111","_is333222","_is33331111","_isContinuous","hall","GlobalFuncs","PrintArray","pos","point","cards","count","concat","push","CardType","Enums","PaixingType","SINGLE_CARD","i","tmp","need","getLaiziNumByValue","DOUBLE_CARD","ROCKET","index","slice","n","THREE_CARD","left","lz_card","j","THREE_ONE_CARD","_checkDoubles","c","lz_need","num","GetSubArrayExceptIndex","result","THREE_TWO_CARD","BOMB_CARD","BOMB_TWO_CARD","BOMB_TWO_TWO_CARD","tmp1","tmp2","need1","need2","cards1","cards2","AIRCRAFT_SINGLE_CARD","subarr","AIRCRAFT_DOUBLE_CARD","tmp3","need3","tmp4","need4","total_count","cell_count","lz_use","card_use","sub_index","clen","SHUNZI_CARD","LIANDUI_CARD","AIRCRAFT_CARD"],"mappings":"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","file":"ddzsingle_robot_typejudger.js","sourceRoot":"../../../../../../assets/Script/ComponentScript/component","sourcesContent":["//\n//  ddz_robot_typejudger.js\n//  ddz\n//\n//  Created by guangy on 14-05-19.\n//  AI牌型判断的功能，抽象出来以减少ddz_robot.js的代码量\n\nddz.AITypeJudger = cc.Class({\n\n\t// 判断牌型，传入牌的数组,返回可能的牌型或不合法等状态\n\tjudgeType: function(arr, dicarr, newarr, lz_obj, laiZiCnt) { //如果有癞子牌，传进来就是>53，转换成value就是15\n\n\t\tvar types = [];\n\t\tvar len = arr.length;\n\n\t\tswitch (len) {\n\t\t\tcase 1:\n\t\t\t\tthis._is1(dicarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis._isRocket(arr, types);\n\t\t\t\tthis._is2(dicarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis._is3(dicarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 4: //4444会两种都判定符合，可以设定为只要判定是炸弹就返回，不再判定31\n\t\t\t\tthis._isBomb(dicarr, lz_obj, types, laiZiCnt);\n\t\t\t\tthis._is31(dicarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis._is32(dicarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis._is411(dicarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tthis._is422(dicarr, lz_obj, types);\n\t\t\t\tthis._is3311(newarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tthis._is3322(newarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tthis._is333111(newarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 15:\n\t\t\t\tthis._is333222(newarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tcase 16:\n\t\t\t\tthis._is33331111(newarr, lz_obj, types);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t};\n\t\tif (len > 4) {\n\t\t\tthis._isContinuous(newarr, lz_obj, len, types, 1);\t//顺子\n\t\t\tthis._isContinuous(newarr, lz_obj, len, types, 2);\t//连对\n\t\t\tthis._isContinuous(newarr, lz_obj, len, types, 3);\t//飞机\n\t\t}\n\t\t// for(var i = 0; i < types.length; i++) {\n\t\t// \ttypes[i].dump();\n\t\t// }\n\t\tif(types.length < 0) {\n\t\t\thall.GlobalFuncs.PrintArray(arr);\n\t\t}\n\n\t\treturn types;\n\t},\n\n\t\n\n\t_is1: function(dicarr, lz_obj, types) { //单牌\n\t\tvar pos = dicarr[0].point;\n\t\tvar cards = dicarr[0].cards;\n\t\thall.GlobalFuncs.PrintArray(cards);\n\t\tif (dicarr[0].count < 1) {\n\t\t\tcards = cards.concat(lz_obj.cards);\n\t\t}\n\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.SINGLE_CARD, pos, 1, cards));\n\t},\n\n\t_is2: function(dicarr, lz_obj, types) { //对子\n\t\tfor (var i = 0; i < dicarr.length; i++) {\n\t\t\tvar tmp = dicarr[i];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 2 - tmp.count;\n\t\t\tif (need <= lz_obj.count) {\n\t\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\tcards.push(hall.GlobalFuncs.getLaiziNumByValue(tmp.point));\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.DOUBLE_CARD, tmp.point, 2, cards));\n\t\t\t}\n\t\t}\n\t},\n\n\t_isRocket: function(arr, types) { //火箭\n\t\tif ((arr[0] == 52 && arr[1] == 53) || (arr[0] == 53 && arr[1] == 52)) {\n\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.ROCKET, 13, 2, [52, 53]));\n\t\t}\n\t},\n\n\t_is3: function(dicarr, lz_obj, types) {\n\t\tfor (var index = 0; index < dicarr.length; index++) {\n\t\t\tvar tmp = dicarr[index];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 3 - tmp.count;\n\t\t\tif (need == lz_obj.count) {\n\t\t\t\tvar cards = tmp.cards.slice(0);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.THREE_CARD, tmp.point, 3, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t// 3带1\n\t_is31: function(dicarr, lz_obj, types) { //3334(0癞子) 33L4(1癞子，如果333L则是炸弹), 3LL4(2癞子，L代表较大的4), 3癞子的话会是炸弹, 所以带癞子的话，一定有3种value\n\t\tfor (var index = 0; index < dicarr.length; index++) {\n\t\t\tvar tmp = dicarr[index];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 3 - tmp.count;\n\t\t\tif (need < 0) {\n\t\t\t\tneed = 0;\n\t\t\t}\n\t\t\tif (need <= lz_obj.count) {\n\t\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//如果有剩下癞子牌，直接按原值推进\n\t\t\t\tvar left = lz_obj.count - need;\n\t\t\t\tif (left > 0) {\n\t\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\t\tfor (var j = 0; j < left; j++) {\n\t\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//剩下的牌直接推进去\n\t\t\t\tfor (var j = 0; j < dicarr.length; j++) {\n\t\t\t\t\tif (j != index) {\n\t\t\t\t\t\tcards = cards.concat(dicarr[j].cards);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.THREE_ONE_CARD, tmp.point, 4, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t_checkDoubles: function(dicarr, count, lz_obj) { //验证在dicarr中是否正好凑count个对子，有lz_count个癞子。\n\t\tvar c = 0; //总共对子数\n\t\tvar lz_need = 0; //总共需要的癞子数\n\t\tvar cards = [];\n\t\tfor (var index = 0; index < dicarr.length; index++) {\n\t\t\tvar tmp = dicarr[index];\n\t\t\tif (tmp.count == 0 || tmp.point > 12) { //癞子不进行计算\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 2 - tmp.count;\n\t\t\tif (need < 0) {\n\t\t\t\tc += 2;\n\t\t\t\tneed = need == -2 ? 0 : 1; //need = -2，则lz_need不增加，need = -1，则lz_need++\n\t\t\t} else {\n\t\t\t\tc += 1;\n\t\t\t}\n\t\t\tlz_need += need;\n\t\t\tif (lz_need <= lz_obj.count) {\n\t\t\t\tcards = cards.concat(tmp.cards);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tvar num = lz_obj.count - lz_need;\n\t\tif (c * 2 + num == count * 2) { //剩余的没拿去凑数的癞子，按原值存储.这里是判断剩下的癞子数是偶数，可以拿来凑对子，（总牌数有限制保证，不需要判断）\n\t\t\tvar n = lz_obj.cards[0];\n\t\t\tfor (var j = 0; j < num; j++) {\n\t\t\t\tcards.push(n);\n\t\t\t}\n\t\t\treturn cards;\n\t\t}\n\t\treturn null;\n\t},\n\n\t// 3带1对\n\t_is32: function(dicarr, lz_obj, types) {\n\t\tfor (var index = 0; index < dicarr.length; index++) {\n\t\t\tvar tmp = dicarr[index];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 3 - tmp.count;\n\t\t\tif (need < 0) { //4444L，不能拼成3带2，否则变成5个4\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (need <= lz_obj.count) { //癞子够拼\n\t\t\t\tvar cards = tmp.cards.slice(0);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//要求剩下的可以拼成一对， 因为总数是5张，拼成了3张，剩下的只要找到一对就行\n\t\t\t\tvar newarr = hall.GlobalFuncs.GetSubArrayExceptIndex(dicarr, [index]);\n\t\t\t\tvar result = this._checkDoubles(newarr, 1, {\n\t\t\t\t\t\"point\": lz_obj.point,\n\t\t\t\t\t\"count\": lz_obj.count - need,\n\t\t\t\t\t\"cards\": lz_obj.cards\n\t\t\t\t});\n\t\t\t\tif (result) { // 剩下的正好是一对\n\t\t\t\t\tcards = cards.concat(result);\n\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.THREE_TWO_CARD, tmp.point, 5, cards));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t//炸弹\n\t_isBomb: function(dicarr, lz_obj, types, laiZiCnt) {\n\t\tfor (var i = 0; i < dicarr.length; i++) {\n\t\t\tvar tmp = dicarr[i];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 4 - tmp.count;\n\t\t\tif (need == lz_obj.count) {\n\t\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\t\t//用到的癞子牌\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.BOMB_CARD, tmp.point, 4, cards, laiZiCnt));\n\t\t\t}\n\t\t}\n\t},\n\n\t// 4带2单\n\t_is411: function(dicarr, lz_obj, types) { //跟31几乎完全一样\n\t\tfor (var index = 0; index < dicarr.length; index++) {\n\t\t\tvar tmp = dicarr[index];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 4 - tmp.count; //need不可能小于0\n\t\t\tif (need <= lz_obj.count) {\n\t\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//如果有剩下癞子牌，直接按原值推进\n\t\t\t\tvar left = lz_obj.count - need;\n\t\t\t\tif (left > 0) {\n\t\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\t\tfor (var j = 0; j < left; j++) {\n\t\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//剩下的牌直接推进去\n\t\t\t\tfor (var j = 0; j < dicarr.length; j++) {\n\t\t\t\t\tif (j != index) {\n\t\t\t\t\t\tcards = cards.concat(dicarr[j].cards);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.BOMB_TWO_CARD, tmp.point, 6, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t// 4带2对\n\t_is422: function(dicarr, lz_obj, types) { //目前444455LL会被处理成5555带2对4，也就是炸弹在需要的时候会被拆成2个对\n\t\tfor (var index = 0; index < dicarr.length; index++) {\n\t\t\tvar tmp = dicarr[index];\n\t\t\tif(tmp.point > 12) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar need = 4 - tmp.count;\n\t\t\tif (need <= lz_obj.count) { //癞子够拼\n\t\t\t\tvar cards = tmp.cards.slice(0);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//要求剩下的可以拼成2对\n\t\t\t\tvar newarr = hall.GlobalFuncs.GetSubArrayExceptIndex(dicarr, [index]);\n\t\t\t\tvar result = this._checkDoubles(newarr, 2, {\n\t\t\t\t\t\"point\": lz_obj.point,\n\t\t\t\t\t\"count\": lz_obj.count - need,\n\t\t\t\t\t\"cards\": lz_obj.cards\n\t\t\t\t});\n\t\t\t\tif (result) { // 剩下的正好是一对\n\t\t\t\t\tcards = cards.concat(result);\n\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.BOMB_TWO_TWO_CARD, tmp.point, 8, cards));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// 3顺带2单\n\t_is3311: function(newarr, lz_obj, types) { //总共8个牌，只要找出2个3顺，剩余2牌一定符合规则\n\t\tfor (var index = 3; index < newarr.length - 1; index++) { //不包含2，从A开始找,出去大王，小王，2\n\t\t\tvar tmp1 = newarr[index];\n\t\t\tvar tmp2 = newarr[index + 1];\n\t\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\t\tvar need2 = 3 - tmp2.count;\n\t\t\tif (need1 < 0) {\n\t\t\t\tneed1 = 0;\n\t\t\t}\n\t\t\tif (need2 < 0) {\n\t\t\t\tneed2 = 0;\n\t\t\t}\n\t\t\tvar left = lz_obj.count - need1 - need2;\n\t\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\t\t//var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\tvar cards1 = tmp1.cards.slice(0);\n\t\t\t\tvar cards2 = tmp2.cards.slice(0);\n\t\t\t\tif (need1 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\tcards1.push(n);  //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t\t//tmp1.cards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need2 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\tcards2.push(n);  //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\tvar cards = cards1.concat(cards2); //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\t\tif (left > 0) {\n\t\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//剩余的牌推进去\n\t\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\t\tif (i != index && i != index + 1) {\n\t\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp2.point, 8, cards));\n\t\t\t\tfor (var i = cards.length - 1; i >= 0; i--) {\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t// 3顺带2对\n\t_is3322: function(newarr, lz_obj, types) {\n\t\tfor (var index = 3; index < newarr.length - 1; index++) { //不包含2，从A开始找\n\t\t\tvar tmp1 = newarr[index];\n\t\t\tvar tmp2 = newarr[index + 1];\n\t\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\t\tvar need2 = 3 - tmp2.count;\n\t\t\tif (need1 < 0) {\n\t\t\t\tneed1 = 0;\n\t\t\t}\n\t\t\tif (need2 < 0) {\n\t\t\t\tneed2 = 0;\n\t\t\t}\n\t\t\tvar left = lz_obj.count - need1 - need2;\n\t\t\tif (left >= 0) { //可以拼成2个三顺，要求剩下的牌可以拼成2个对子\n\t\t\t\t//要求剩下的可以拼成2对\n\t\t\t\tvar subarr = hall.GlobalFuncs.GetSubArrayExceptIndex(newarr, [index, index + 1]);\n\t\t\t\tvar result = this._checkDoubles(subarr, 2, {\n\t\t\t\t\t\"point\": lz_obj.point,\n\t\t\t\t\t\"count\": left,\n\t\t\t\t\t\"cards\": lz_obj.cards\n\t\t\t\t});\n\t\t\t\tif (result) { // 剩下的正好是2对\n\t\t\t\t\t//开始把牌放入cards\n\t\t\t\t\t//var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\t\tvar cards1 = tmp1.cards.slice(0);\n\t\t\t\t\tvar cards2 = tmp2.cards.slice(0);\n\t\t\t\t\tif (need1 > 0) {\n\t\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\t\tcards1.push(n);  //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (need2 > 0) {\n\t\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\t\tcards2.push(n);   //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar cards = cards1.concat(cards2); //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\tcards = cards.concat(result);\n\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD, tmp2.point, 10, cards));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// 3顺带3单\n\t_is333111: function(newarr, lz_obj, types) {\n\t\tfor (var index = 3; index < newarr.length - 2; index++) { //不包含2，从A开始找\n\t\t\tvar tmp1 = newarr[index];\n\t\t\tvar tmp2 = newarr[index + 1];\n\t\t\tvar tmp3 = newarr[index + 2];\n\t\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\t\tvar need2 = 3 - tmp2.count;\n\t\t\tvar need3 = 3 - tmp3.count;\n\t\t\tif (need1 < 0) {\n\t\t\t\tneed1 = 0;\n\t\t\t}\n\t\t\tif (need2 < 0) {\n\t\t\t\tneed2 = 0;\n\t\t\t}\n\t\t\tif (need3 < 0) {\n\t\t\t\tneed3 = 0;\n\t\t\t}\n\t\t\tvar left = lz_obj.count - need1 - need2 - need3;\n\t\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\t\tvar cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\t\tif (need1 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need2 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need3 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\t\tif (left > 0) {\n\t\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//剩余的牌推进去\n\t\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\t\tif (i != index && i != index + 1 && i != index + 2) {\n\t\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thall.GlobalFuncs.PrintArray(cards);\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp3.point, 12, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t// 3顺带3对\n\t_is333222: function(newarr, lz_obj, types) {\n\t\tfor (var index = 3; index < newarr.length - 2; index++) { //不包含2，从A开始找\n\t\t\tvar tmp1 = newarr[index];\n\t\t\tvar tmp2 = newarr[index + 1];\n\t\t\tvar tmp3 = newarr[index + 2];\n\t\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\t\tvar need2 = 3 - tmp2.count;\n\t\t\tvar need3 = 3 - tmp3.count;\n\t\t\tif (need1 < 0) {\n\t\t\t\tneed1 = 0;\n\t\t\t}\n\t\t\tif (need2 < 0) {\n\t\t\t\tneed2 = 0;\n\t\t\t}\n\t\t\tif (need3 < 0) {\n\t\t\t\tneed3 = 0;\n\t\t\t}\n\t\t\tvar left = lz_obj.count - need1 - need2 - need3;\n\t\t\tif (left >= 0) { //可以拼成2个三顺，要求剩下的牌可以拼成2个对子\n\t\t\t\t//要求剩下的可以拼成2对\n\t\t\t\tvar subarr = hall.GlobalFuncs.GetSubArrayExceptIndex(newarr, [index, index + 1, index + 2]);\n\t\t\t\tvar result = this._checkDoubles(subarr, 3, {\n\t\t\t\t\t\"point\": lz_obj.point,\n\t\t\t\t\t\"count\": left,\n\t\t\t\t\t\"cards\": lz_obj.cards\n\t\t\t\t});\n\t\t\t\tif (result) { // 剩下的正好是3对\n\t\t\t\t\t//开始把牌放入cards\n\t\t\t\t\tvar cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\t\t\tif (need1 > 0) {\n\t\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (need2 > 0) {\n\t\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (need3 > 0) {\n\t\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcards = cards.concat(result);\n\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD, tmp3.point, 15, cards));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// 3顺带4单\n\t_is33331111: function(newarr, lz_obj, types) {\n\t\tfor (var index = 3; index < newarr.length - 3; index++) { //不包含2，从A开始找\n\t\t\tvar tmp1 = newarr[index];\n\t\t\tvar tmp2 = newarr[index + 1];\n\t\t\tvar tmp3 = newarr[index + 2];\n\t\t\tvar tmp4 = newarr[index + 3];\n\t\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\t\tvar need2 = 3 - tmp2.count;\n\t\t\tvar need3 = 3 - tmp3.count;\n\t\t\tvar need4 = 3 - tmp4.count;\n\t\t\tif (need1 < 0) {\n\t\t\t\tneed1 = 0;\n\t\t\t}\n\t\t\tif (need2 < 0) {\n\t\t\t\tneed2 = 0;\n\t\t\t}\n\t\t\tif (need3 < 0) {\n\t\t\t\tneed3 = 0;\n\t\t\t}\n\t\t\tif (need4 < 0) {\n\t\t\t\tneed4 = 0;\n\t\t\t}\n\t\t\tvar left = lz_obj.count - need1 - need2 - need3 - need4;\n\t\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\t\tvar cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\t\tcards = cards.concat(tmp4.cards);\n\t\t\t\tif (need1 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need2 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need3 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need4 > 0) {\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(tmp4.point);\n\t\t\t\t\tfor (var i = 0; i < need4; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\t\tif (left > 0) {\n\t\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//剩余的牌推进去\n\t\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\t\tif (i != index && i != index + 1 && i != index + 2 && i != index + 3) {\n\t\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp3.point, 12, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t_isContinuous: function(newarr, lz_obj, total_count, types, cell_count) { //newarr为2AK..3的数组， cell_count为每个单元的数量（顺子1连对2飞机3）\n\t\tif (newarr[0].count > 0 || newarr[1].count > 0 || newarr[2].count > 0) { //大小王，2不能出现在顺连对飞机中，如果有2，一定不符合。如果2为癞子牌，不当本身值使用，所以下面循环index从1开始\n\t\t\treturn;\n\t\t}\n\t\tfor (var index = 3; index < newarr.length; index++) {\n\t\t\tvar lz_use = 0;\n\t\t\tvar i = 0;\n\t\t\tvar cards = [];\n\t\t\tvar point = -1;\n\t\t\tvar card_use = 0;\n\t\t\twhile (i <= newarr.length - index - 1) {\n\t\t\t\tvar sub_index = index + i;\n\t\t\t\tvar tmp = newarr[sub_index];\n\t\t\t\tvar need = cell_count - tmp.count;\n\t\t\t\tif (need < 0) {\n\t\t\t\t\tcards = []; //牌型不符合规则的时候\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (lz_use > lz_obj.count - need) { //如果需要的癞子数超过了，则break出去，检查之后是否还有剩余牌，则会导致剩余牌，不符合规则，所以清空cards\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlz_use += need;\n\t\t\t\tpoint = tmp.point;\n\t\t\t\tif (need > 0) { //需要用癞子补，则把癞子转换成相应的值\n\t\t\t\t\tvar n = hall.GlobalFuncs.getLaiziNumByValue(point);\n\t\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcards = cards.concat(tmp.cards);\n\t\t\t\tcard_use += tmp.count;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tvar clen = cards.length;\n\t\t\t// if(clen < 5) {\n\t\t\t// }\n\t\t\t// if(lz_obj.count != lz_use) {\n\t\t\t// }\n\t\t\t// if(card_use + lz_use != total_count) {\n\t\t\t// }\n\t\t\tif (clen >= 5 && lz_obj.count == lz_use && card_use + lz_use == total_count) { // 不能有癞子牌剩余，也不能有手牌剩余，3个条件都满足才行\n\t\t\t\tswitch (cell_count) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.SHUNZI_CARD, point, clen, cards));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.LIANDUI_CARD, point, clen, cards));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\ttypes.push(new ddz.CardType(hall.Enums.PaixingType.AIRCRAFT_CARD, point, clen, cards));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n});\n\n"]}