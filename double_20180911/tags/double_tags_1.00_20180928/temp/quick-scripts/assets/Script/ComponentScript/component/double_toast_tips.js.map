{"version":3,"sources":["double_toast_tips.js"],"names":["cc","Class","extends","Component","properties","titleLabel","default","type","Label","setTitleWithString","titleString","time","string","ty","Timer","setTimer","closeAction","node","destroy","double","msgBoxNode","onDestroy","unscheduleAllCallbacks"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAa;AACTC,qBAAU,IADD;AAETC,kBAAOP,GAAGQ;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBa,SADL,EAHP;AAwBLC,wBAAqB,4BAAUC,WAAV,EAAsBC,IAAtB,EAA4B;AAC7C;AACA,aAAKN,UAAL,CAAgBO,MAAhB,GAAyBF,WAAzB;AACA,YAAG,CAACC,IAAJ,EAAS;AACLA,mBAAO,GAAP;AACH;AACDE,WAAGC,KAAH,CAASC,QAAT,CAAkB,IAAlB,EAAwB,KAAKC,WAA7B,EAAyCL,IAAzC;AACH,KA/BI;;AAiCLK,iBAAc,uBAAY;AACtB,aAAKC,IAAL,CAAUC,OAAV;AACAC,eAAOC,UAAP,GAAoB,IAApB;AACH,KApCI;AAqCLC,eAAU,qBAAU;AAChB,aAAKC,sBAAL;AACH;;AAED;;AAEA;;AAEA;AACA;AACA;;AAEA;AAjDK,CAAT","file":"double_toast_tips.js","sourceRoot":"../../../../../../assets/Script/ComponentScript/component","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        titleLabel : {\n            default : null,\n            type : cc.Label\n        }\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n    setTitleWithString : function (titleString,time) {\n        // this.bgSprite.width = titleString.length * 10;\n        this.titleLabel.string = titleString;\n        if(!time){\n            time = 1.5;\n        }\n        ty.Timer.setTimer(this, this.closeAction,time)\n    },\n\n    closeAction : function () {\n        this.node.destroy();\n        double.msgBoxNode = null;\n    },\n    onDestroy:function(){\n        this.unscheduleAllCallbacks();\n    }\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    // start () {\n    //\n    // },\n\n    // update (dt) {},\n});\n"]}