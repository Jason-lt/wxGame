{"version":3,"sources":["EventType.js"],"names":["console","log","ty","EventType","TCP_ERROR","TCP_CLOSE","TCP_OPENED","TCP_RECONNECT","TCP_RECEIVE","HEART_BEAT_LOGIC","HEART_BEAT","MSG_LOG_OUT","CMD_USER_INFO","CMD_BIND_USER","GET_AD_MSG_SUCCESS"],"mappings":";;;;;;AACAA,QAAQC,GAAR,CAAY,kBAAZ;AACAC,GAAGC,SAAH,GAAe;AACX;AACA;;AAEA;AACAC,eAAW,WALA;AAMXC,eAAW,WANA;AAOXC,gBAAY,YAPD,EAOe;AAC1BC,mBAAe,eARJ;AASXC,iBAAa,aATF,EASgB;;AAE3BC,sBAAkB,kBAXP,EAW2B;AACtCC,gBAAY,YAZD,EAYe;;AAE1BC,iBAAa,QAdF;;AAgBXC,mBAAe,WAhBJ;AAiBXC,mBAAgB,WAjBL,EAiBiB;;AAE5BC,wBAAqB,oBAnBV,CAmB+B;;AAE1C;AArBW,CAAf","file":"EventType.js","sourceRoot":"../../../../../assets/Script/Framework","sourcesContent":["\nconsole.log(\"EventType loaded\");\nty.EventType = {\n    // 网络消息，客户端发给server的叫 CMD_XXX, server 发给客户端的叫 MSG_XXX\n    // 把所有的消息名字写到这里，防止写到各个文件内时，引起的混乱\n\n    // tcp状态的事件\n    TCP_ERROR: 'tcp_error',\n    TCP_CLOSE: 'tcp_close',\n    TCP_OPENED: 'tcp_opened', // 连接建立好之后的回调\n    TCP_RECONNECT: 'tcp_reconnect',\n    TCP_RECEIVE: 'tcp_receive',//长连接接收任何消息的事件\n\n    HEART_BEAT_LOGIC: 'heart_beat_logic', //  心跳逻辑\n    HEART_BEAT: 'heart_beat', //  心跳\n\n    MSG_LOG_OUT: 'logout',\n\n    CMD_USER_INFO: 'user_info',\n    CMD_BIND_USER : 'bind_user',// 返回user_info\n\n    GET_AD_MSG_SUCCESS : \"GET_AD_MSG_SUCCESS\" //获取交叉导流信息\n\n    // GET_SHARE_SINGLE_CONFIG_SUCCESS : \"GET_SHARE_SINGLE_CONFIG_SUCCESS\"\n};\n"]}