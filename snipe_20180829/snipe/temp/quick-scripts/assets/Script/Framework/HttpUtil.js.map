{"version":3,"sources":["HttpUtil.js"],"names":["ty","HttpUtil","httpPost","cfgObj","httpType","successCallBack","failCallBack","wx","request","url","data","postData","header","method","dataType","success","res","statusCode","hasOwnProperty","hall","LOGD","fail","complete","err","LOGE","JSON","stringify","httpGet","successcb","failcb"],"mappings":";;;;;;AAAA;;;;AAIAA,GAAGC,QAAH,GAAc;;AAEV;;;;;;;AAOAC,cAAS,kBAAUC,MAAV,EAAiBC,QAAjB,EAA2BC,eAA3B,EAA4CC,YAA5C,EAA0D;AAC/D,YAAI;AACAC,eAAGC,OAAH,CAAW;AACPC,qBAAMN,OAAOM,GADN;AAEPC,sBAAOP,OAAOQ,QAFP;AAGPC,wBAAST,OAAOS,MAHT;AAIPC,wBAAST,QAJF;AAKPU,0BAAW,MALJ;AAMPC,yBAAU,iBAAUC,GAAV,EAAe;AACrB,wBAAIA,IAAIC,UAAJ,IAAkB,GAAtB,EAA0B;AACtB;AACA;AACA,4BAAID,IAAIN,IAAJ,IAAYM,IAAIN,IAAJ,CAASQ,cAAT,CAAwB,uBAAxB,CAAZ,IAAgEF,IAAIN,IAAJ,CAAS,uBAAT,KAAqC,IAAzG,EAA8G;AAC1GS,iCAAKC,IAAL,CAAU,sBAAV,EAAkC,gBAAlC;AACH;AACD,4BAAIf,eAAJ,EAAoB;AAChBA,4CAAgBW,GAAhB;AACH;AACJ,qBATD,MAUI;AACAG,6BAAKC,IAAL,CAAU,sBAAV,EAAkC,gBAAgBJ,IAAIC,UAAtD;AACH;AACJ,iBApBM;AAqBPI,sBAAO,cAAUL,GAAV,EAAe;AAClBG,yBAAKC,IAAL,CAAU,sBAAV,EAAkC,iBAAiBjB,OAAOM,GAA1D;AACA,wBAAIH,YAAJ,EAAiB;AACbA,qCAAaU,GAAb;AACH;AACJ,iBA1BM;AA2BPM,0BAAW,kBAAUN,GAAV,EAAe,CAEzB;AA7BM,aAAX;AA+BH,SAhCD,CAgCC,OAAOO,GAAP,EAAW;AACRJ,iBAAKK,IAAL,CAAU,QAAV,EAAoB,eAAeC,KAAKC,SAAL,CAAeH,GAAf,CAAnC;AACH;AAEJ,KA9CS;AA+CVI,aAAQ,iBAAUxB,MAAV,EAAkByB,SAAlB,EAA6BC,MAA7B,EAAqC;AACzCV,aAAKC,IAAL,CAAU,qBAAV,EAAiC,SAASjB,OAAOM,GAAjD;AACA,YAAI;AACAF,eAAGC,OAAH,CAAW;AACPC,qBAAMN,OAAOM,GADN;AAEPI,wBAAS,KAFF;AAGPE,yBAAU,iBAAUC,GAAV,EAAe;AACrB,wBAAIA,IAAIC,UAAJ,IAAkB,GAAtB,EAA0B;AACtBE,6BAAKC,IAAL,CAAU,qBAAV,EAAiC,SAASK,KAAKC,SAAL,CAAeV,IAAIN,IAAnB,CAA1C;AACA,4BAAGkB,SAAH,EAAc;AACVA,sCAAUZ,IAAIN,IAAd;AACH;AACJ,qBALD,MAMI;AACAS,6BAAKC,IAAL,CAAU,qBAAV,EAAiC,gBAAgBJ,IAAIC,UAArD;AACH;AACJ,iBAbM;AAcPI,sBAAO,cAAUL,GAAV,EAAe;AAClBG,yBAAKC,IAAL,CAAU,qBAAV,EAAiC,iBAAiBjB,OAAOM,GAAzD;AACA,wBAAGoB,MAAH,EAAW;AACPA,+BAAOb,GAAP;AACH;AACJ;AAnBM,aAAX;AAqBH,SAtBD,CAsBC,OAAOO,GAAP,EAAW;AACRJ,iBAAKK,IAAL,CAAU,QAAV,EAAoB,cAAcC,KAAKC,SAAL,CAAeH,GAAf,CAAlC;AACH;AAEJ;AA3ES,CAAd","file":"HttpUtil.js","sourceRoot":"../../../../../assets/Script/Framework","sourcesContent":["/**\n * Created by xujing on 2018/4/8.\n * http请求工具\n */\nty.HttpUtil = {\n\n    /**\n     * 发起http请求\n     * @param cfgObj 请求参数\n     * @param httpType 请求方式 POST,GET\n     * @param successCallBack 成功后回调\n     * @param failCallBack 失败后回调\n     */\n    httpPost:function (cfgObj,httpType, successCallBack, failCallBack) {\n        try {\n            wx.request({\n                url : cfgObj.url,\n                data : cfgObj.postData,\n                header : cfgObj.header,\n                method : httpType,\n                dataType : 'json',\n                success : function (res) {\n                    if (res.statusCode == 200){\n                        // hall.LOGW('ty.HttpUtil.httpPost', '======res.statusCode200============' + cfgObj.url+\"==\"+JSON.stringify(arguments));\n                        //正常连接{\"/api/bilog5/clientlog\": \"ok\"}\n                        if (res.data && res.data.hasOwnProperty('/api/bilog5/clientlog') && res.data['/api/bilog5/clientlog'] == \"ok\"){\n                            hall.LOGD('ty.HttpUtil.httpPost', 'post success! ');\n                        }\n                        if (successCallBack){\n                            successCallBack(res);\n                        }\n                    }\n                    else{\n                        hall.LOGD('ty.HttpUtil.httpPost', 'statusCode:' + res.statusCode);\n                    }\n                },\n                fail : function (res) {\n                    hall.LOGD('ty.HttpUtil.httpPost', 'post error! ' + cfgObj.url);\n                    if (failCallBack){\n                        failCallBack(res);\n                    }\n                },\n                complete : function (res) {\n\n                }\n            })\n        }catch (err){\n            hall.LOGE(\"error:\", \"httpPost——\" + JSON.stringify(err));\n        }\n\n    },\n    httpGet:function (cfgObj, successcb, failcb) {\n        hall.LOGD('ty.HttpUtil.httpGet', 'url:' + cfgObj.url);\n        try {\n            wx.request({\n                url : cfgObj.url,\n                method : 'GET',\n                success : function (res) {\n                    if (res.statusCode == 200){\n                        hall.LOGD('ty.HttpUtil.httpGet', 'res:' + JSON.stringify(res.data));\n                        if(successcb) {\n                            successcb(res.data);\n                        }\n                    }\n                    else{\n                        hall.LOGD('ty.HttpUtil.httpGet', 'statusCode:' + res.statusCode);\n                    }\n                },\n                fail : function (res) {\n                    hall.LOGD('ty.HttpUtil.httpGet', 'post error! ' + cfgObj.url);\n                    if(failcb) {\n                        failcb(res);\n                    }\n                }\n            });\n        }catch (err){\n            hall.LOGE(\"error:\", \"httpGet——\" + JSON.stringify(err));\n        }\n\n    }\n};"]}