{"version":3,"sources":["../../../../../assets/Script/Framework/assets/Script/Framework/Timer.js"],"names":["ty","Timer","setTimer","obj","callback","interval","repeatNum","delay","_TAG","hall","LOGD","scheduler","cc","director","getScheduler","paused","times","macro","REPEAT_FOREVER","schedule","cancelTimer","unschedule","isScheduledTimer","isScheduled"],"mappings":";;;;;;AAAA;AACA;;;;AAIAA,GAAGC,KAAH,GAAW;AACP;;;;;;;;AAQHC,cAAS,kBAASC,GAAT,EAAcC,QAAd,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,KAA7C,EAAmD;AACrD,YAAIJ,OAAOA,IAAIK,IAAf,EAAqB;AACjBC,iBAAKC,IAAL,CAAU,UAAV,EAAsB,qCAAqCP,IAAIK,IAAJ,GAAWL,IAAIK,IAAf,GAAsB,EAA3D,CAAtB;AACH;AACD,YAAIG,YAAYC,GAAGC,QAAH,CAAYC,YAAZ,EAAhB;AACA;AACA,YAAIC,SAAS,KAAb;AACA,YAAIC,QAAU,QAAQV,SAAT,GAAsBA,SAAtB,GAAkCM,GAAGK,KAAH,CAASC,cAAxD;AACAP,kBAAUQ,QAAV,CAAmBf,QAAnB,EAA6BD,GAA7B,EAAkCE,QAAlC,EAA4CC,SAA5C,EAAuDC,KAAvD,EAA8DQ,MAA9D;AACN,KAlBS;;AAoBP;;;;;;AAMHK,iBAAY,qBAASjB,GAAT,EAAcC,QAAd,EAAuB;AAClC;AACM,YAAID,OAAOA,IAAIK,IAAf,EAAqB;AACjBC,iBAAKC,IAAL,CAAU,UAAV,EAAsB,wCAAwCP,IAAIK,IAAJ,GAAWL,IAAIK,IAAf,GAAsB,EAA9D,CAAtB;AACH;AACD,YAAIG,YAAYC,GAAGC,QAAH,CAAYC,YAAZ,EAAhB;AACNH,kBAAUU,UAAV,CAAqBjB,QAArB,EAA+BD,GAA/B;AACA,KAjCS;AAkCP;;;;;;AAMAmB,sBAAiB,0BAASnB,GAAT,EAAcC,QAAd,EAAuB;AACpC;AACA,YAAID,OAAOA,IAAIK,IAAf,EAAqB;AACjBC,iBAAKC,IAAL,CAAU,UAAV,EAAsB,6CAA6CP,IAAIK,IAAJ,GAAWL,IAAIK,IAAf,GAAsB,EAAnE,CAAtB;AACH;AACD,YAAIG,YAAYC,GAAGC,QAAH,CAAYC,YAAZ,EAAhB;AACA,eAAOH,UAAUY,WAAV,CAAsBnB,QAAtB,EAAgCD,GAAhC,CAAP;AACH;AA/CM,CAAX","file":"Timer.js","sourceRoot":"../../../../../assets/Script/Framework","sourcesContent":["// 对scheduler进行封装\n/**\n    参数的含义依次是：回调的obj、回调函数、tick的间隔、不算这次还要重复的次数，开始tick的delay时间\n */\n\nty.Timer = {\n    /**\n     * 开始定时器\n     * @param {[type]}   obj       [description]\n     * @param {Function} callback  [description]\n     * @param {[type]}   interval  [description]\n     * @param {[type]}   repeatNum [description]\n     * @param {[type]}   delay     [description]\n     */\n\tsetTimer:function(obj, callback, interval, repeatNum, delay){\n        if (obj && obj._TAG) {\n            hall.LOGD('ty.Timer', '----------in setTimer----------' + (obj._TAG ? obj._TAG : ''));\n        }\n        var scheduler = cc.director.getScheduler();\n        // 直接屏蔽paused\n        var paused = false;\n        var times =  (null != repeatNum) ? repeatNum : cc.macro.REPEAT_FOREVER;\n        scheduler.schedule(callback, obj, interval, repeatNum, delay, paused);\n\t},\n\n    /**\n     * 取消定时器\n     * @param  {[type]}   obj      [description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n\tcancelTimer:function(obj, callback){\n\t\t// 这个类在jsb_cocos2dx_auto_api.js中可以找到\n        if (obj && obj._TAG) {\n            hall.LOGD('ty.Timer', '----------in cancelTimer ---------' + (obj._TAG ? obj._TAG : ''));\n        }\n        var scheduler = cc.director.getScheduler();\n\t\tscheduler.unschedule(callback, obj);\n\t},\n    /**\n     * 判断定时器\n     * @param  {[type]}   obj      [description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n    isScheduledTimer:function(obj, callback){\n        // 这个类在jsb_cocos2dx_auto_api.js中可以找到\n        if (obj && obj._TAG) {\n            hall.LOGD('ty.Timer', '----------in isScheduledTimer ---------' + (obj._TAG ? obj._TAG : ''));\n        }\n        var scheduler = cc.director.getScheduler();\n        return scheduler.isScheduled(callback, obj);\n    }\n};\n"]}