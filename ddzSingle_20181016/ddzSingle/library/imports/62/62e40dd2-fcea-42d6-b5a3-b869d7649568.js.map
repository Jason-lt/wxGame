{"version":3,"sources":["../../../../../assets/Script/Framework/assets/Script/Framework/NotificationCenter.js"],"names":["console","log","ty","NotificationCenter","events","listen","eName","handler","scope","push","ignore","fns","filter","fn","ignoreScope","msg","obs","hall","LOGD","trigger","eventName","params","i","length","call"],"mappings":";;;;;;AAAA;AACAA,QAAQC,GAAR,CAAY,2BAAZ;AACAC,GAAGC,kBAAH,GAAwB;AACpBC,YAAS,EADW;AAEpBC,YAAS,gBAASC,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,EAA+B;AACpC,aAAKJ,MAAL,CAAYE,KAAZ,IAAqB,KAAKF,MAAL,CAAYE,KAAZ,KAAsB,EAA3C;AACA,aAAKF,MAAL,CAAYE,KAAZ,EAAmBG,IAAnB,CAAwB;AACpBD,mBAAOA,SAAS,IADI;AAEpBD,qBAASA;AAFW,SAAxB;AAIH,KARmB;;AAUpBG,YAAS,gBAASJ,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,EAA+B;AACpCA,gBAAQA,SAAS,IAAjB;AACA,YAAIG,MAAM,KAAKP,MAAL,CAAYE,KAAZ,CAAV;;AAEA,YAAG,CAACK,GAAJ,EACI;;AAEJ,aAAKP,MAAL,CAAYE,KAAZ,IAAqBK,IAAIC,MAAJ,CAAW,UAASC,EAAT,EAAY;AACxC,mBAAOA,GAAGL,KAAH,IAAUA,KAAV,IAAmBK,GAAGN,OAAH,IAAYA,OAAtC;AACH,SAFoB,CAArB;AAGH,KApBmB;AAqBpBO,iBAAc,qBAAUN,KAAV,EAAiB;AAC3B,aAAI,IAAIO,GAAR,IAAe,KAAKX,MAApB,EAA2B;AACvB,gBAAIY,MAAM,KAAKZ,MAAL,CAAYW,GAAZ,CAAV;AACA,gBAAGC,GAAH,EAAO;AACH,qBAAKZ,MAAL,CAAYW,GAAZ,IAAmBC,IAAIJ,MAAJ,CAAW,UAASC,EAAT,EAAY;AACtC,wBAAGA,GAAGL,KAAH,IAAYA,KAAf,EAAqB;AACjB,+BAAO,IAAP;AACH,qBAFD,MAEM;AACFS,6BAAKC,IAAL,CAAU,IAAV,EAAgB,uDAAuDH,GAAvE;AACA,+BAAO,KAAP;AACH;AACJ,iBAPkB,CAAnB;AAQH;AACJ;AACJ,KAnCmB;AAoCpB;AACAI,aAAU,iBAASC,SAAT,EAAoBC,MAApB,EAA2B;AACjC;AACA,YAAIV,MAAM,KAAKP,MAAL,CAAYgB,SAAZ,CAAV;;AAEA,YAAG,CAACT,GAAJ,EAAQ;AACN;AACD;;AAED,YAAIE,EAAJ;;AAEA,aAAI,IAAIS,IAAI,CAAZ,EAAeA,IAAIX,IAAIY,MAAvB,EAA+BD,GAA/B,EAAmC;;AAE/BT,iBAAKF,IAAIW,CAAJ,CAAL;AACA;AACA;AACAT,eAAGN,OAAH,CAAWiB,IAAX,CAAgBX,GAAGL,KAAnB,EAA0Ba,MAA1B;AACH;AACJ;AAtDmB,CAAxB","file":"NotificationCenter.js","sourceRoot":"../../../../../assets/Script/Framework","sourcesContent":["//全局的事件监听模块，可用于对象之间的消息传递，所以没有提供构造函数\nconsole.log(\"NotificationCenter loaded\");\nty.NotificationCenter = {\n    events : {},\n    listen : function(eName, handler, scope){\n        this.events[eName] = this.events[eName] || [];\n        this.events[eName].push({\n            scope: scope || this,\n            handler: handler\n        });\n    },\n\n    ignore : function(eName, handler, scope){\n        scope = scope || this;\n        var fns = this.events[eName];\n\n        if(!fns) \n            return;\n\n        this.events[eName] = fns.filter(function(fn){\n            return fn.scope!=scope || fn.handler!=handler\n        });\n    },\n    ignoreScope : function (scope) {\n        for(var msg in this.events){\n            var obs = this.events[msg];\n            if(obs){\n                this.events[msg] = obs.filter(function(fn){\n                    if(fn.scope != scope){\n                        return true;\n                    } else{\n                        hall.LOGD(null, 'ty.NotificationCenter : remove listener by Scope: ' + msg);\n                        return false;\n                    }\n                })\n            }\n        }\n    },\n    // \n    trigger : function(eventName, params){\n        // hall.LOGD(null, 'ty.NotificationCenter : trigger: ' + eventName);\n        var fns = this.events[eventName];\n        \n        if(!fns){\n          return;\n        }\n\n        var fn;\n    \n        for(var i = 0; i < fns.length; i++){\n            \n            fn = fns[i];\n            // fn.handler.apply(fns.scope, params||[]);\n            // 用call直接把各个参数回调出去\n            fn.handler.call(fn.scope, params)\n        }\n    }\n};"]}