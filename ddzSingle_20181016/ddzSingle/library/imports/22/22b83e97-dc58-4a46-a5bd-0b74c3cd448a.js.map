{"version":3,"sources":["../../../../../assets/Script/Framework/assets/Script/Framework/TCP.js"],"names":["console","log","noShowLogMsgs","setTCP_FAIL","ty","TCP","connectStatus","CONNECT_STATUS_FAIL","CONNECT_STATUS_OK","CONNECT_STATUS_OPENING","CONNECT_STATUS_CLOSING","isTimerInited","tickCount","connect","url","BiLog","clickStat","UserInfo","clickStatEventType","clickStatEventTypeTCP_Start","self","wx","connectSocket","onSocketOpen","res","hall","LOGD","NotificationCenter","trigger","EventType","TCP_OPENED","Timer","setTimer","cc","director","timerSchedule","onSocketError","clickStatEventTypeTCP_Failed","TCP_ERROR","onSocketClose","TCP_CLOSE","onSocketMessage","onHide","content","decodeMessage","time","Date","msgStr","unescape","replace","strJson","substr","length","_json","JSON","parse","indexOf","cmd","ddz","msgCache","pushMsg","triggerMsg","msg","MSG_LED","result","gameId","TCP_RECEIVE","data","ArrayBuffer","databytes","Uint8Array","i","len","tmpc","String","fromCharCode","GlobalFuncs","base64decodeRaw","mask","slice","charcode","_utf8_decode","MsgFactory","sendHeartBeat","reConnet","TCP_RECONNECT","SystemInfo","webSocketUrl","sendMsg","stringify","sendSocketMessage","success","params","fail","errMsg","arguments","closeSocket","complete","close"],"mappings":";;;;;;AAAA;;;;;;;AAOAA,QAAQC,GAAR,CAAY,YAAZ;AACA,IAAIC,gBAAgB,CAAC,kBAAD,EAAqB,YAArB,CAApB;AACA,IAAIC,cAAc,SAAdA,WAAc,GAAY;AAC1B;AACAC,OAAGC,GAAH,CAAOC,aAAP,GAAuBF,GAAGC,GAAH,CAAOE,mBAA9B;AACH,CAHD;;AAKAH,GAAGC,GAAH,GAAS;;AAELG,uBAAoB,CAFf;AAGLC,4BAAyB,CAHpB;AAILC,4BAAyB,CAJpB;AAKLH,yBAAsB,CALjB;AAMLD,mBAAgB,CANX;AAOLK,mBAAgB,KAPX;AAQLC,eAAY,CARP;;AAULC,aAAS,iBAASC,GAAT,EAAa;AAClBV,WAAGW,KAAH,CAASC,SAAT,CAAmBZ,GAAGa,QAAH,CAAYC,kBAAZ,CAA+BC,2BAAlD,EAA+E,CAACL,GAAD,CAA/E;AACA,YAAIM,OAAO,IAAX;AACA,YAAIhB,GAAGC,GAAH,CAAOC,aAAP,IAAwBF,GAAGC,GAAH,CAAOG,iBAAnC,EAAqD;AACjD;AACH;;AAED,YAAIJ,GAAGC,GAAH,CAAOC,aAAP,IAAwBF,GAAGC,GAAH,CAAOI,sBAAnC,EAA0D;AACtD;AACH;;AAEDL,WAAGC,GAAH,CAAOC,aAAP,GAAuBF,GAAGC,GAAH,CAAOI,sBAA9B;AACAY,WAAGC,aAAH,CAAiB;AACbR,iBAAKA;AADQ,SAAjB;;AAIAO,WAAGE,YAAH,CAAgB,UAASC,GAAT,EAAc;AAC1BC,iBAAKC,IAAL,CAAU,IAAV,EAAgB,yBAAhB;AACAtB,eAAGC,GAAH,CAAOC,aAAP,GAAuBF,GAAGC,GAAH,CAAOG,iBAA9B;;AAEAJ,eAAGuB,kBAAH,CAAsBC,OAAtB,CAA8BxB,GAAGyB,SAAH,CAAaC,UAA3C;;AAEA,gBAAI,CAAC1B,GAAGC,GAAH,CAAOM,aAAZ,EAA2B;AACvBP,mBAAGC,GAAH,CAAOM,aAAP,GAAuB,IAAvB;AACH;;AAED;AACAP,eAAG2B,KAAH,CAASC,QAAT,CAAkBC,GAAGC,QAArB,EAA+Bd,KAAKe,aAApC,EAAmD,CAAnD;AACH,SAZD;;AAcAd,WAAGe,aAAH,CAAiB,UAASZ,GAAT,EAAc;AAC3BC,iBAAKC,IAAL,CAAU,IAAV,EAAgB,wBAAhB;;AAEA;AACA;AACA;AACA;AACAtB,eAAGW,KAAH,CAASC,SAAT,CAAmBZ,GAAGa,QAAH,CAAYC,kBAAZ,CAA+BmB,4BAAlD,EAAgF,CAACvB,GAAD,CAAhF;;AAEAX;AACAC,eAAGuB,kBAAH,CAAsBC,OAAtB,CAA8BxB,GAAGyB,SAAH,CAAaS,SAA3C;AACH,SAXD;;AAcAjB,WAAGkB,aAAH,CAAiB,UAASf,GAAT,EAAc;AAC3BC,iBAAKC,IAAL,CAAU,IAAV,EAAgB,gBAAhB;AACAvB;AACAC,eAAGuB,kBAAH,CAAsBC,OAAtB,CAA8BxB,GAAGyB,SAAH,CAAaW,SAA3C;AACH,SAJD;;AAMAnB,WAAGoB,eAAH,CAAmB,UAASjB,GAAT,EAAc;AAC7B,gBAAIC,KAAKiB,MAAT,EAAgB;AACZ;AACA;AACH;AACD;AACA;AACA,gBAAIC,UAAUvB,KAAKwB,aAAL,CAAmBpB,IAAI,MAAJ,CAAnB,CAAd;;AAEA,gBAAImB,WAAW,IAAX,IAAmBA,WAAW,MAAlC,EAA0C;AACtC;AACA;AACH;;AAED,gBAAIE,OAAO,IAAIC,IAAJ,EAAX;AACA,gBAAIC,SAASF,OAAO,qBAAP,GAA+BG,SAASL,QAAQM,OAAR,CAAgB,OAAhB,EAAwB,IAAxB,CAAT,CAA5C;;AAEA,gBAAIC,UAAUP,QAAQQ,MAAR,CAAe,CAAf,EAAkBR,QAAQS,MAAR,GAAiB,CAAnC,CAAd;AACA,gBAAIF,WAAW,IAAX,IAAmBA,QAAQE,MAAR,GAAiB,CAAxC,EAA2C;AACvC,oBAAIC,QAAQC,KAAKC,KAAL,CAAWL,OAAX,CAAZ;AACA,oBAAIhD,cAAcsD,OAAd,CAAsBH,MAAMI,GAA5B,KAAoC,CAAC,CAAzC,EAA2C;AACvChC,yBAAKC,IAAL,CAAU,IAAV,EAAgBqB,MAAhB;AACH;;AAED;AACIW,oBAAIC,QAAJ,CAAaC,OAAb,CAAqBP,KAArB;AACJ;AACA;AACA;AACA;AACH;AAEJ,SAhCD;AAiCH,KA7FI;;AA+FLQ,gBAAW,oBAAUC,GAAV,EAAe;AACtB,YAAIA,IAAIL,GAAJ,IAAWC,IAAI7B,SAAJ,CAAckC,OAA7B,EAAqC;AACjCD,gBAAIE,MAAJ,CAAWC,MAAX,GAAoB,IAApB;AACH;AACD7D,WAAGuB,kBAAH,CAAsBC,OAAtB,CAA8BxB,GAAGyB,SAAH,CAAaqC,WAA3C,EAAwDJ,GAAxD;AACH,KApGI;;AAsGLlB,mBAAe,uBAASuB,IAAT,EAAe;AAC1B,YAAI,OAAOC,WAAP,IAAsB,WAAtB,IAAqCD,gBAAgBC,WAAzD,EAAsE;AAClE,gBAAIC,YAAY,IAAIC,UAAJ,CAAeH,IAAf,CAAhB;AACA,gBAAIxB,UAAU,EAAd;AACA,iBAAK,IAAI4B,IAAI,CAAR,EAAWC,MAAMH,UAAUjB,MAAhC,EAAwCmB,IAAIC,GAA5C,EAAiDD,GAAjD,EAAsD;AAClD,oBAAIE,OAAOC,OAAOC,YAAP,CAAoBN,UAAUE,CAAV,CAApB,CAAX;AACA5B,2BAAW8B,IAAX;AACH;AACD,mBAAO9B,OAAP;AACH;AACD,YAAIwB,OAAO1C,KAAKmD,WAAL,CAAiBC,eAAjB,CAAiCV,IAAjC,CAAX;AACA,YAAIW,OAAOX,KAAKY,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX;AACAZ,eAAOA,KAAKY,KAAL,CAAW,CAAX,CAAP;AACA,aAAK,IAAIR,IAAI,CAAR,EAAWC,MAAML,KAAKf,MAA3B,EAAmCmB,IAAIC,GAAvC,EAA4CD,GAA5C,EAAiD;AAC7C,gBAAIS,WAAWb,KAAKI,CAAL,CAAf;AACAS,wBAAYF,KAAKP,IAAI,CAAT,CAAZ;AACAJ,iBAAKI,CAAL,IAAUS,QAAV;AACH;AACD,YAAIhB,SAASvC,KAAKmD,WAAL,CAAiBK,YAAjB,CAA8Bd,IAA9B,CAAb;AACA,eAAOH,MAAP;AACH,KA1HI;;AA4HL7B,mBAAgB,yBAAW;AACvB/B,WAAGC,GAAH,CAAOO,SAAP,GAAmB,CAACR,GAAGC,GAAH,CAAOO,SAAP,GAAmB,CAApB,IAAyB,CAA5C;AACA,YAAIR,GAAGC,GAAH,CAAOO,SAAP,IAAoB,CAAxB,EAA2B;AACvB;AACAa,iBAAKyD,UAAL,CAAgBC,aAAhB;AACH;;AAED;AACA/E,WAAGC,GAAH,CAAO+E,QAAP;AACH,KArII;;AAuILA,cAAS,oBAAY;AACjB,YAAI3D,KAAKiB,MAAT,EAAgB;AACZ;AACA;AACH;AACD,YAAItC,GAAGC,GAAH,CAAOC,aAAP,IAAwBF,GAAGC,GAAH,CAAOE,mBAAnC,EAAwD;AACpDH,eAAGuB,kBAAH,CAAsBC,OAAtB,CAA8BxB,GAAGyB,SAAH,CAAawD,aAA3C;AACAjF,eAAGC,GAAH,CAAOQ,OAAP,CAAeT,GAAGkF,UAAH,CAAcC,YAA7B;AACH;AACJ,KAhJI;;AAkJLC,aAAS,iBAASrB,IAAT,EAAe;AACpB,YAAI/D,GAAGC,GAAH,CAAOC,aAAP,IAAwBF,GAAGC,GAAH,CAAOG,iBAAnC,EAAsD;AAClD;AACH;;AAED,YAAIuC,SAASO,KAAKmC,SAAL,CAAetB,IAAf,CAAb;AACA,YAAIjE,cAAcsD,OAAd,CAAsBW,KAAKV,GAA3B,KAAmC,CAAC,CAAxC,EAA0C;AACtC,gBAAIZ,OAAO,IAAIC,IAAJ,EAAX;AACArB,iBAAKC,IAAL,CAAUmB,IAAV,EAAgB,iBAAiBE,MAAjC;AACH;;AAED1B,WAAGqE,iBAAH,CAAqB;AACjBvB,kBAAKpB,MADY;AAEjB4C,qBAAS,iBAASC,MAAT,EAAgB;AACrB;AACH,aAJgB;;AAMjBC,kBAAM,cAASD,MAAT,EAAiB;AACnB,oBAAIE,SAASC,UAAU,CAAV,CAAb;AACA,oBAAID,UAAUA,OAAO,QAAP,MAAqB,yCAAnC,EAA6E;AACzEzE,uBAAG2E,WAAH;AACA7F;AACH;AACDsB,qBAAKC,IAAL,CAAU,IAAV,EAAgB,sBAAsB4B,KAAKmC,SAAL,CAAeM,SAAf,CAAtC;AACH,aAbgB;;AAejBE,sBAAU,kBAASL,MAAT,EAAiB,CAC1B;AAhBgB,SAArB;AAkBH,KA/KI;;AAiLLM,WAAO,iBAAU;AACb9F,WAAGC,GAAH,CAAOC,aAAP,GAAuBF,GAAGC,GAAH,CAAOK,sBAA9B;AACAW,WAAG2E,WAAH;AACA7F;AACAsB,aAAKC,IAAL,CAAU,IAAV,EAAgB,yBAAhB;AACH;AAtLI,CAAT","file":"TCP.js","sourceRoot":"../../../../../assets/Script/Framework","sourcesContent":["/**\n * @author zhaoliang\n * @date 1.28\n * \n * 全局对象\n * 长连接管理器\n */\nconsole.log(\"TCP loaded\");\nvar noShowLogMsgs = ['room_online_info', 'heart_beat'];\nvar setTCP_FAIL = function () {\n    // ddz.msgCache.blocked = true;\n    ty.TCP.connectStatus = ty.TCP.CONNECT_STATUS_FAIL;\n};\n\nty.TCP = {\n    \n    CONNECT_STATUS_OK : 1,\n    CONNECT_STATUS_OPENING : 2,\n    CONNECT_STATUS_CLOSING : 3,\n    CONNECT_STATUS_FAIL : 0,\n    connectStatus : 0,\n    isTimerInited : false,\n    tickCount : 0,\n\n    connect: function(url){\n        ty.BiLog.clickStat(ty.UserInfo.clickStatEventType.clickStatEventTypeTCP_Start, [url]);\n        var self = this;\n        if (ty.TCP.connectStatus == ty.TCP.CONNECT_STATUS_OK){\n            return;\n        }\n\n        if (ty.TCP.connectStatus == ty.TCP.CONNECT_STATUS_OPENING){\n            return;\n        }\n\n        ty.TCP.connectStatus = ty.TCP.CONNECT_STATUS_OPENING;\n        wx.connectSocket({\n            url: url\n        });\n\n        wx.onSocketOpen(function(res) {\n            hall.LOGD(null, 'TCP webSocket opened...');\n            ty.TCP.connectStatus = ty.TCP.CONNECT_STATUS_OK;\n\n            ty.NotificationCenter.trigger(ty.EventType.TCP_OPENED);\n\n            if (!ty.TCP.isTimerInited) {\n                ty.TCP.isTimerInited = true;\n            }\n\n            //定时发送心跳\n            ty.Timer.setTimer(cc.director, self.timerSchedule, 1);\n        });\n\n        wx.onSocketError(function(res) {\n            hall.LOGD(null, 'TCP webSocket error...');\n\n            // var logicScene = cc.director.getScene();\n            // var no = logicScene.children[0];\n            // var window = no.getComponent(\"Ddz\");\n            // window.testWithString(JSON.stringify(res));\n            ty.BiLog.clickStat(ty.UserInfo.clickStatEventType.clickStatEventTypeTCP_Failed, [url]);\n\n            setTCP_FAIL();\n            ty.NotificationCenter.trigger(ty.EventType.TCP_ERROR);\n        });\n\n\n        wx.onSocketClose(function(res) {\n            hall.LOGD(null, 'WebSocket 已关闭！');\n            setTCP_FAIL();\n            ty.NotificationCenter.trigger(ty.EventType.TCP_CLOSE);\n        });\n\n        wx.onSocketMessage(function(res) {\n            if (hall.onHide){\n                //切后台不再处理消息\n                return;\n            }\n            // 处理长连接的消息\n            // hall.LOGD(null, 'TCP receive MSG:' + JSON.stringify(res));\n            var content = self.decodeMessage(res[\"data\"]);\n\n            if (content == null || content == '0000') {\n                // hall.LOGD(null, 'get he87654artbeat msg');\n                return;\n            }\n\n            var time = new Date();\n            var msgStr = time + \"[Receive TCP Msg]: \" + unescape(content.replace(/\\\\u/gi,'%u'));\n\n            var strJson = content.substr(0, content.length - 0);\n            if (strJson != null && strJson.length > 0) {\n                var _json = JSON.parse(strJson);\n                if (noShowLogMsgs.indexOf(_json.cmd) == -1){\n                    hall.LOGD(null, msgStr);\n                }\n\n                // if (ddz.msgCache.blocked){\n                    ddz.msgCache.pushMsg(_json);\n                // }\n                // else{\n                //     self.triggerMsg(_json);\n                // }\n            }\n            \n        });\n    },\n\n    triggerMsg:function (msg) {\n        if (msg.cmd == ddz.EventType.MSG_LED){\n            msg.result.gameId = 9999;\n        }\n        ty.NotificationCenter.trigger(ty.EventType.TCP_RECEIVE, msg);\n    },\n\n    decodeMessage: function(data) {\n        if (typeof ArrayBuffer != 'undefined' && data instanceof ArrayBuffer) {\n            var databytes = new Uint8Array(data);\n            var content = ''\n            for (var i = 0, len = databytes.length; i < len; i++) {\n                var tmpc = String.fromCharCode(databytes[i]);\n                content += tmpc;\n            }\n            return content\n        }\n        var data = hall.GlobalFuncs.base64decodeRaw(data);\n        var mask = data.slice(0, 4);\n        data = data.slice(4);\n        for (var i = 0, len = data.length; i < len; i++) {\n            var charcode = data[i];\n            charcode ^= mask[i % 4];\n            data[i] = charcode;\n        }\n        var result = hall.GlobalFuncs._utf8_decode(data);\n        return result;\n    },\n\n    timerSchedule : function() {\n        ty.TCP.tickCount = (ty.TCP.tickCount + 1) % 3;\n        if (ty.TCP.tickCount == 2) {\n            // 发送心跳\n            hall.MsgFactory.sendHeartBeat();\n        }\n\n        // 每2秒检查一下长连接，如果不通，则重连。\n        ty.TCP.reConnet();\n    },\n\n    reConnet:function () {\n        if (hall.onHide){\n            //在后台不生连(IOS会出问题)\n            return;\n        }\n        if (ty.TCP.connectStatus == ty.TCP.CONNECT_STATUS_FAIL) {\n            ty.NotificationCenter.trigger(ty.EventType.TCP_RECONNECT);\n            ty.TCP.connect(ty.SystemInfo.webSocketUrl);\n        }\n    },\n\n    sendMsg: function(data) {\n        if (ty.TCP.connectStatus != ty.TCP.CONNECT_STATUS_OK) {\n            return;\n        }\n\n        var msgStr = JSON.stringify(data);\n        if (noShowLogMsgs.indexOf(data.cmd) == -1){\n            var time = new Date();\n            hall.LOGD(time, 'TCP sendMsg:' + msgStr);\n        }\n\n        wx.sendSocketMessage({\n            data:msgStr,\n            success: function(params){\n                // hall.LOGD(null, 'TCP sendMsg success:' + JSON.stringify(arguments));\n            },\n\n            fail: function(params) {\n                var errMsg = arguments[0];\n                if (errMsg && errMsg['errMsg'] === 'sendSocketMessage:fail taskID not exist'){\n                    wx.closeSocket();\n                    setTCP_FAIL();\n                }\n                hall.LOGD(null, 'TCP sendMsg fail:' + JSON.stringify(arguments));\n            },\n            \n            complete: function(params) {\n            }\n        });\n    },\n\n    close: function(){\n        ty.TCP.connectStatus = ty.TCP.CONNECT_STATUS_CLOSING;\n        wx.closeSocket();\n        setTCP_FAIL();\n        hall.LOGD(null, 'TCP close..............');\n    }\n};"]}