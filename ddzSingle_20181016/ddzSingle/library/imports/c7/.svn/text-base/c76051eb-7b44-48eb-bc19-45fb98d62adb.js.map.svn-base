{"version":3,"sources":["../../../../../../assets/Script/hall/models/assets/Script/hall/models/UserInfoGdata.js"],"names":["hall","UserInfoGdata","cc","Class","ctor","_TAG","m_matchscores","m_marsscore","m_lastlogin","m_gold","m_level","m_title","m_chip","m_nextexp","m_maxwinchip","m_maxweekdoubles","m_oboxtimes","m_referrerSwitch","m_robotloc","m_winrate","m_exp","m_slams","m_losechips","m_winchips","m_canSetReferrer","m_nslogin","m_experience","m_loginsum","m_charm","m_dashifen","m_skillScoreInfo","m_starHeadId","m_winchipstats","m_kinstats","LOGD","destroy","randomSetStarHeadId","sex","Math","floor","random","starHeadId","parseGdata","gdata","JSON","stringify","winrateObj","parse","j"],"mappings":"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","file":"UserInfoGdata.js","sourceRoot":"../../../../../../assets/Script/hall/models","sourcesContent":["//  userInfo中的gdata信息\n\nhall.UserInfoGdata = cc.Class({\n\n    ctor: function() {\n        this._TAG = \"hall.UserInfoGdata\";\n        this.m_matchscores = 0;\n        this.m_marsscore = 0;\n        this.m_lastlogin =  0; // 上次登录时间,距离2012-5-1的天数\n        this.m_gold =  0; // 金花\n        this.m_level =  0; // 用户级别\n        this.m_title =  \"\"; //称号\n        this.m_chip =  0; // 筹码(更正:单品游戏金币.by FK)\n        this.m_nextexp =  0; //到下一级的经验\n        this.m_maxwinchip = 0;\n        this.m_maxweekdoubles = 0;\n        this.m_oboxtimes = 0;\n        this.m_referrerSwitch =  1; // 推荐人功能开关，1 开启；0 未开启\n        this.m_robotloc = \"\";\n        this.m_winrate =  {}; // 胜率：｛pt总局数， wt胜利数｝\n        this.m_exp = 0;\n        this.m_slams = 0;\n        this.m_losechips = 0;\n        this.m_winchips =  0; //历史赢取最大金币数\n        this.m_canSetReferrer =  false; // 是否还能设置推荐人 true可以；false不可以\n        this.m_nslogin =  0; //连续登录天数\n        this.m_experience=[];\n        this.m_loginsum = -1;// 登陆的次数。第一次登陆(即新手)是1,大于1则判定为老手\n        this.m_charm = 0; //魅力值\n        this.m_dashifen = null; // 大厅版斗地主的大师分信息,存储在hallGData中\n        this.m_skillScoreInfo = null;// 牌桌里的座位上的userinfo中的大师分信息\n        this.m_starHeadId = -1; // 明星头像ID - 明星斗地主添加\n        this.m_winchipstats = [];// 各种游戏所赢的金币数\n        this.m_kinstats = []; // 各种王\n\n        hall.LOGD(this._TAG, \"in ctor\");\n    },\n\n    destroy: function() {\n        hall.LOGD(this._TAG, \"in destroy\");\n    },\n\n    randomSetStarHeadId:function(sex){\n        this.m_starHeadId = Math.floor(Math.random() * 3);\n    },\n\n    starHeadId: function(){\n        if( this.m_starHeadId < 0 ){\n            this.randomSetStarHeadId();\n        }\n        return this.m_starHeadId;\n    },\n\n    parseGdata:function(gdata){\n        hall.LOGD(this._TAG, '=======gdata begin========'+JSON.stringify(gdata));\n\n        if(typeof(gdata) != 'undefined'){\n            this.m_matchscores = gdata[\"matchscores\"];\n            this.m_marsscore = gdata[\"marsscore\"];\n            this.m_lastlogin = gdata[\"lastlogin\"];\n            this.m_gold = gdata[\"gold\"];\n            this.m_level = gdata[\"level\"];\n            this.m_title = gdata[\"title\"];\n            // this.m_chip = gdata[\"chip\"];\n            this.m_nextexp = gdata[\"nextexp\"];\n            this.m_maxweekdoubles = gdata[\"maxweekdoubles\"];\n            this.m_maxwinchip = gdata[\"maxwinchip\"];\n            this.m_oboxtimes = gdata[\"oboxtimes\"];\n            this.m_referrerSwitch = gdata[\"referrerSwitch\"];\n            this.m_robotloc = gdata[\"robotloc\"];\n            this.m_exp = gdata[\"exp\"];\n            this.m_slams = gdata[\"slams\"];\n            this.m_losechips = gdata[\"losechips\"];\n            this.m_winchips = gdata[\"winchips\"];\n            this.m_canSetReferrer = gdata[\"canSetReferrer\"];\n            this.m_nslogin = gdata[\"nslogin\"];\n            this.m_loginsum = gdata[\"loginsum\"];\n            this.m_charm = gdata[\"charm\"];\n\n            this.m_winchipstats = gdata[\"winchip_stats\"];\n            this.m_kinstats = gdata[\"king_stats\"];\n            \n            if(typeof(gdata[\"winrate\"]) != 'undefined'){\n                var winrateObj = JSON.parse(gdata[\"winrate\"]);\n                for(var j in winrateObj){\n                    if(typeof(winrateObj[j]) != 'undefined'){\n                        this.m_winrate[j] = winrateObj[j]\n                    }\n                }\n            }\n            if(typeof(gdata[\"dashifen\"]) != 'undefined'){\n                this.m_dashifen = null;\n                this.m_dashifen = gdata[\"dashifen\"];\n            }\n        }\n\n        if( this.m_starHeadId == -1 ){\n            this.randomSetStarHeadId(0);\n        }\n        hall.LOGD(this._TAG, '=======gdata end========');\n    }\n});"]}