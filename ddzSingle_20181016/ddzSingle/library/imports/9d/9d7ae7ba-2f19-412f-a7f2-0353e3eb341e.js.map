{"version":3,"sources":["../../../../../assets/Script/Framework/assets/Script/Framework/HttpUtil.js"],"names":["ty","HttpUtil","httpPost","cfgObj","httpType","successCallBack","failCallBack","hall","LOGD","wx","request","url","data","postData","header","method","dataType","success","res","JSON","stringify","statusCode","hasOwnProperty","fail","complete","httpGet","successcb","failcb"],"mappings":";;;;;;AAAA;;;;AAIAA,GAAGC,QAAH,GAAc;;AAEV;;;;;;;AAOAC,cAAS,kBAAUC,MAAV,EAAiBC,QAAjB,EAA2BC,eAA3B,EAA4CC,YAA5C,EAA0D;AAC/DC,aAAKC,IAAL,CAAU,sBAAV,EAAkC,YAAlC;AACAC,WAAGC,OAAH,CAAW;AACPC,iBAAMR,OAAOQ,GADN;AAEPC,kBAAOT,OAAOU,QAFP;AAGPC,oBAASX,OAAOW,MAHT;AAIPC,oBAASX,QAJF;AAKPY,sBAAW,MALJ;AAMPC,qBAAU,iBAAUC,GAAV,EAAe;AACrBX,qBAAKC,IAAL,CAAU,sBAAV,EAAkC,YAAYW,KAAKC,SAAL,CAAeF,GAAf,CAA9C;AACA,oBAAIA,IAAIG,UAAJ,IAAkB,GAAtB,EAA0B;AACtB;AACA;AACA,wBAAIH,IAAIN,IAAJ,IAAYM,IAAIN,IAAJ,CAASU,cAAT,CAAwB,uBAAxB,CAAZ,IAAgEJ,IAAIN,IAAJ,CAAS,uBAAT,KAAqC,IAAzG,EAA8G;AAC1GL,6BAAKC,IAAL,CAAU,sBAAV,EAAkC,gBAAlC;AACH;AACD,wBAAIH,eAAJ,EAAoB;AAChBA,wCAAgBa,GAAhB;AACH;AACJ,iBATD,MAUI;AACAX,yBAAKC,IAAL,CAAU,sBAAV,EAAkC,gBAAgBU,IAAIG,UAAtD;AACH;AACJ,aArBM;AAsBPE,kBAAO,cAAUL,GAAV,EAAe;AAClBX,qBAAKC,IAAL,CAAU,sBAAV,EAAkC,iBAAiBL,OAAOQ,GAA1D;AACA,oBAAIL,YAAJ,EAAiB;AACbA,iCAAaY,GAAb;AACH;AACJ,aA3BM;AA4BPM,sBAAW,kBAAUN,GAAV,EAAe;AACtBX,qBAAKC,IAAL,CAAU,sBAAV,EAAkC,iBAAlC;AACH;AA9BM,SAAX;AAgCH,KA3CS;AA4CViB,aAAQ,iBAAUtB,MAAV,EAAkBuB,SAAlB,EAA6BC,MAA7B,EAAqC;AACzCpB,aAAKC,IAAL,CAAU,qBAAV,EAAiC,SAASL,OAAOQ,GAAjD;AACAF,WAAGC,OAAH,CAAW;AACPC,iBAAMR,OAAOQ,GADN;AAEPI,oBAAS,KAFF;AAGPE,qBAAU,iBAAUC,GAAV,EAAe;AACrB,oBAAIA,IAAIG,UAAJ,IAAkB,GAAtB,EAA0B;AACtBd,yBAAKC,IAAL,CAAU,qBAAV,EAAiC,SAASW,KAAKC,SAAL,CAAeF,IAAIN,IAAnB,CAA1C;AACA,wBAAGc,SAAH,EAAc;AACVA,kCAAUR,IAAIN,IAAd;AACH;AACJ,iBALD,MAMI;AACAL,yBAAKC,IAAL,CAAU,qBAAV,EAAiC,gBAAgBU,IAAIG,UAArD;AACH;AACJ,aAbM;AAcPE,kBAAO,cAAUL,GAAV,EAAe;AAClBX,qBAAKC,IAAL,CAAU,qBAAV,EAAiC,iBAAiBL,OAAOQ,GAAzD;AACA,oBAAGgB,MAAH,EAAW;AACPA,2BAAOT,GAAP;AACH;AACJ;AAnBM,SAAX;AAqBH;AAnES,CAAd","file":"HttpUtil.js","sourceRoot":"../../../../../assets/Script/Framework","sourcesContent":["/**\n * Created by xujing on 2018/4/8.\n * http请求工具\n */\nty.HttpUtil = {\n\n    /**\n     * 发起http请求\n     * @param cfgObj 请求参数\n     * @param httpType 请求方式 POST,GET\n     * @param successCallBack 成功后回调\n     * @param failCallBack 失败后回调\n     */\n    httpPost:function (cfgObj,httpType, successCallBack, failCallBack) {\n        hall.LOGD('ty.HttpUtil.httpPost', 'res =  ...');\n        wx.request({\n            url : cfgObj.url,\n            data : cfgObj.postData,\n            header : cfgObj.header,\n            method : httpType,\n            dataType : 'json',\n            success : function (res) {\n                hall.LOGD('ty.HttpUtil.httpPost', 'res =  ' + JSON.stringify(res));\n                if (res.statusCode == 200){\n                    // hall.LOGW('ty.HttpUtil.httpPost', '======res.statusCode200============' + cfgObj.url+\"==\"+JSON.stringify(arguments));\n                    //正常连接{\"/api/bilog5/clientlog\": \"ok\"}\n                    if (res.data && res.data.hasOwnProperty('/api/bilog5/clientlog') && res.data['/api/bilog5/clientlog'] == \"ok\"){\n                        hall.LOGD('ty.HttpUtil.httpPost', 'post success! ');\n                    }\n                    if (successCallBack){\n                        successCallBack(res);\n                    }\n                }\n                else{\n                    hall.LOGD('ty.HttpUtil.httpPost', 'statusCode:' + res.statusCode);\n                }\n            },\n            fail : function (res) {\n                hall.LOGD('ty.HttpUtil.httpPost', 'post error! ' + cfgObj.url);\n                if (failCallBack){\n                    failCallBack(res);\n                }\n            },\n            complete : function (res) {\n                hall.LOGD('ty.HttpUtil.httpPost', 'post complete! ');\n            }\n        })\n    },\n    httpGet:function (cfgObj, successcb, failcb) {\n        hall.LOGD('ty.HttpUtil.httpGet', 'url:' + cfgObj.url);\n        wx.request({\n            url : cfgObj.url,\n            method : 'GET',\n            success : function (res) {\n                if (res.statusCode == 200){\n                    hall.LOGD('ty.HttpUtil.httpGet', 'res:' + JSON.stringify(res.data));\n                    if(successcb) {\n                        successcb(res.data);\n                    }\n                }\n                else{\n                    hall.LOGD('ty.HttpUtil.httpGet', 'statusCode:' + res.statusCode);\n                }\n            },\n            fail : function (res) {\n                hall.LOGD('ty.HttpUtil.httpGet', 'post error! ' + cfgObj.url);\n                if(failcb) {\n                    failcb(res);\n                }\n            }\n        });\n    }\n};"]}