{"version":3,"sources":["../../../../../../assets/Script/ComponentScript/singleAI/assets/Script/ComponentScript/singleAI/ddzsingle_robot_type_finder.js"],"names":["ddz","typeByNum","cc","Class","_TAG","ctor","num","_num","find","cardsPoint","result","LOGD","i","length","count","_filter","push","cards","JSON","stringify","index","singleFinder","point","existTester","_exist","reset","isExist","total","arguments","j","key","typeFinder","_cardsByPoint","_lzCardsPoint","_singleFinder","_doubleFinder","_threeFinder","_bombFinder","_existTester","init","cardsByPoint","lzCardsPoint","log","destroy","_canWork","singleRes","_findSingle","concat","doubleCards","_findDouble","doubleCardsWithLz","_findResByInitWithLz","threeCards","_findThreeCards","thrreCardsWithLz","threeWithOne","_findThreeWithOne","threeWithDouble","_findThreeWithDouble","plane","_findPlane","planeWithSingle","_findPlaneWithSingle","planeWithDouble","_findPlaneWithDouble","shunzi","_findShunZi","continueDouble","_findContinueDouble","bomb","_findBomb","bombWithLz","rocket","_findRocket","doubleLzCards","dstCnt","tmp","slice","t","_isOutOfAK","splice","needLzCnt","threeLzCards","bombLzCards","tmpResult","tmpArr","prevCard","threeRes","_isLz","_isHave","res","doubleRes","k","l","next","tmp2","m","planeRes","temp","pop","lzUsedYet","curPutPoint","src","_isKing"],"mappings":"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","file":"ddzsingle_robot_type_finder.js","sourceRoot":"../../../../../../assets/Script/ComponentScript/singleAI","sourcesContent":["/*\n\tFile : 牌型查找器，从一组手牌中查找出所有的牌型\n\t\n\t单张、对子、三张、炸弹都是判断同一个点数的牌的张数，这个可以抽象，这类的判断不加癞子牌\n*/\n\nddz.typeByNum = cc.Class({\n\n\t_TAG : 'ddz.typeByNum',\n\n\tctor: function(num) {\n\t\tthis._num = num;\n\t},\n\n\t/* \n\t\tfunction : 查找数量为_num的手牌\n\t\tcardsPoint : 手牌的权重数组\n\t*/\n\tfind: function(cardsPoint) {\n\t\tvar result = [];\n\t\tif (this._num <= 0) {\n\t\t\tddz.LOGD(this._TAG, 'You have not set _num vale');\n\t\t\treturn result;\n\t\t}\n\n\t\tif (!cardsPoint) {\n\t\t\treturn result;\n\t\t}\n\n\t\tfor (var i=0; i<cardsPoint.length; i++) {\n\t\t\tif(cardsPoint[i].count == this._num) {\n\t\t\t\tif (!this._filter(cardsPoint, i)) {\n\t\t\t\t\tresult.push(cardsPoint[i].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tddz.LOGD('typeByNum', ' result = ' + JSON.stringify(result));\n\t\treturn result;\n\t},\n\n\t//过滤\n\t_filter: function(cardsPoint, index) {\n\t\treturn false;\n\t},\n});\n\nddz.singleFinder = cc.Class({\n\n\tctor: function() {\n\t\t// this._super(1);\n\t},\n\n\t_filter: function(cardsPoint, index) {\n\t\tif (cardsPoint[index].point==13) {\n\t\t\tif (index+1<cardsPoint.length) {\n\t\t\t\tif (cardsPoint[index+1].point == 14) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (cardsPoint[index].point==14) {\n\t\t\tif (cardsPoint[index-1].point == 13) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n});\n\n//去重：三带一在有大于癞子牌时会有相同的结果项，三带二在有1张癞子、两个不同的对组合成的结果集中有重复的\nddz.existTester = cc.Class({\n\t_exist : {},\n\n\treset: function() {\n\t\tthis._exist = {};\n\t},\n\n\t// 动态参数，传入num数组\n\tisExist: function() {\n\t\tvar total = 0;\n\t\tfor (var i=0; i<arguments.length; i++) {\n\t\t\tfor (var j=0; j<arguments[i].length; j++) {\n\t\t\t\ttotal += arguments[i][j];\n\t\t\t}\n\t\t}\n\t\tvar key = '' + total;\n\t\tif (this._exist[key]) {\n\t\t\treturn true;\n\t\t}\n\t\tthis._exist[key] = 1;\n\t\treturn false;\n\t},\n});\n\nddz.typeFinder = cc.Class({\n\n\tctor: function() {\n\t\tthis._cardsByPoint = null; //手牌的权重数组\n\n\t\t//癞子数据样式\n\t\t//{\"count\":2,\"point\":15,\"cards\":[65,65]}\n\t\t//{\"count\":0,\"point\":-1,\"cards\":[]}\n\t\tthis._lzCardsPoint = null; //癞子手牌信息\n\n\t\t// this._singleFinder = new ddz.singleFinder();\n\t\tthis._singleFinder = new ddz.typeByNum(1);\n\t\tthis._doubleFinder = new ddz.typeByNum(2);\n\t\tthis._threeFinder = new ddz.typeByNum(3);\n\t\tthis._bombFinder = new ddz.typeByNum(4);\n\n\t\tthis._existTester = new ddz.existTester();\n\t},\n\n\tinit: function(cardsByPoint, lzCardsPoint) {\n\t\tthis._cardsByPoint = cardsByPoint;\n\t\tthis._lzCardsPoint = lzCardsPoint;\n\t\tcc.log('this._lzCardsPoint = ' + JSON.stringify(this._lzCardsPoint));\n\t},\n\n\tdestroy: function() {\n\t\tthis._cardsByPoint = null;\n\t\tthis._lzCardsPoint = null;\n\t\tthis._existTester = null;\n\t},\n\n\t// 查找所有的牌型组合\n\tfind: function() {\n\t\tvar result = [];\n\t\tif (!this._canWork()) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// 找单牌\n\t\tvar singleRes = this._findSingle();\n\t\tresult = result.concat(singleRes);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t//找对子\n\t\tvar doubleCards = this._findDouble();\n\t\tvar doubleCardsWithLz = this._findResByInitWithLz(2, singleRes);\n\t\tresult = result.concat(doubleCards, doubleCardsWithLz);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t//找三张\n\t\tvar threeCards = this._findThreeCards();\n\t\tvar thrreCardsWithLz = this._findResByInitWithLz(3, singleRes, doubleCards);\n\t\t// result = result.concat(thrreCardsWithLz);\n\t\t// if (result.length > 0) {\n\t\t// \treturn result;\n\t\t// }\n\n\t\t// 找三带一\n\t\tvar threeWithOne = this._findThreeWithOne(singleRes, threeCards.concat(thrreCardsWithLz));\n\t\tresult = result.concat(threeWithOne);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// 找三带一对\n\t\tvar threeWithDouble = this._findThreeWithDouble(doubleCards, threeCards.concat(thrreCardsWithLz));\n\t\tresult = result.concat(threeWithDouble);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t//找飞机\n\t\tvar plane = this._findPlane();\n\t\t// result = result.concat(plane);\n\n\t\t// 飞机带单张翅膀\n\t\tvar planeWithSingle = this._findPlaneWithSingle(plane, singleRes);\n\t\tif (planeWithSingle.length > 1) {\n\t\t\tresult = result.concat(planeWithSingle);\n\t\t\treturn result;\n\t\t}\n\n\t\t//飞机带对子\n\t\tvar planeWithDouble = this._findPlaneWithDouble(plane, doubleCards);\n\t\tresult = result.concat(planeWithDouble);\n\t\tif (planeWithDouble.length > 0) {\n\t\t\tresult = result.concat(planeWithDouble);\n\t\t\treturn result;\n\t\t}\n\n\t\tif (plane.length > 0) {\n\t\t\tresult = result.concat(plane);\n\t\t\treturn result;\n\t\t}\n\n\t\t//找顺子\n\t\tvar shunzi = this._findShunZi();\n\t\tresult = result.concat(shunzi);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// 找连对\n\t\tvar continueDouble = this._findContinueDouble();\n\t\tresult = result.concat(continueDouble);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t//找炸弹\n\t\tvar bomb = this._findBomb();\n\t\tvar bombWithLz = this._findResByInitWithLz(4, singleRes, doubleCards, threeCards);\n\t\tresult = result.concat(bomb, bombWithLz);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\t//找火箭\n\t\tvar rocket = this._findRocket();\n\t\tresult = result.concat(rocket);\n\t\tif (result.length > 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t// 找单牌\n\t_findSingle: function() {\n\t\t// var result = [];\n\t\t// var single = this._singleFinder.find(this._cardsByPoint);\n\t\t// var singleLz = this._singleFinder.find([this._lzCardsPoint]);\n\t\t// result = result.concat(single, singleLz);\n\t\t// return single;\n\t\treturn this._singleFinder.find(this._cardsByPoint);\n\t},\n\n\t//找对子：从原始牌型中查找、从癞子中找、从单牌和癞子中的结合找\n\t_findDouble: function() {\n\t\tvar result = [];\n\t\tvar doubleCards = this._doubleFinder.find(this._cardsByPoint);\n\t\tvar doubleLzCards = this._doubleFinder.find([this._lzCardsPoint]);\n\t\tresult = result.concat(doubleCards, doubleLzCards);\n\t\treturn result;\n\t},\n\n\t/*\n\t\t用于单牌和癞子凑对子、单牌和对子凑三张 ...\n\t\t根据原始结果拼凑结果数据，使用的是动态参数\n\t\t第一个参数是期望的牌的长度，第二、三个参数是初始结果集\n\t\t弟一个参数是整数、弟二、三...是数组\n\t*/\n\t_findResByInitWithLz: function() {\n\t\tvar result = [];\n\n\t\tif (this._lzCardsPoint.count <= 0) {\n\t\t\treturn result;\n\t\t}\n\t\tif (arguments.length < 2) {\n\t\t\treturn result;\n\t\t}\n\n\t\tvar dstCnt = arguments[0];\n\t\tvar i = 0;\n\n\t\t// 拼接初始结果数据\n\t\tfor (i=1; i<arguments.length; i++) {\n\t\t\tvar tmp = [];\n\t\t\tfor (var j=0; j<arguments[i].length; j++) {\n\t\t\t\ttmp.push(arguments[i][j].slice(0));\n\t\t\t}\n\t\t\tresult = result.concat(tmp);\n\t\t}\n\n\t\tfor (i=0; i<result.length; i++) {\n\n\t\t\tvar t = result[i];\n\t\t\tif (this._isOutOfAK(t)) {\n\t\t\t\t// 不去拼接包涵癞子、大小王的数\n\t\t\t\tresult.splice(i, 1);\n\n\t\t\t\ti -= 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar needLzCnt = dstCnt - result[i].length;\n\t\t\tif (needLzCnt > this._lzCardsPoint.count) {\n\t\t\t\t//癞子不够\n\t\t\t\tresult.splice(i, 1);\n\n\t\t\t\ti -= 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (var j=0; j<needLzCnt; j++) {\n\t\t\t\tresult[i].push(this._lzCardsPoint.cards[j]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\n\n\t//找三张\n\t_findThreeCards: function() {\n\t\tvar result = [];\n\t\tvar threeCards = this._threeFinder.find(this._cardsByPoint);\n\t\tvar threeLzCards = this._threeFinder.find([this._lzCardsPoint]);\n\t\tresult = result.concat(threeCards, threeLzCards);\n\t\treturn result;\n\t},\n\n\t//找炸弹\n\t_findBomb: function() {\n\t\tvar result = [];\n\t\tvar bomb = this._bombFinder.find(this._cardsByPoint);\n\t\tvar bombLzCards = this._bombFinder.find([this._lzCardsPoint]);\n\t\tresult = result.concat(bomb, bombLzCards);\n\t\treturn result;\n\t},\n\n\t//找火箭\n\t_findRocket: function() {\n\t\tvar result = [];\n\t\tif (this._cardsByPoint.length < 2) {\n\t\t\treturn result;\n\t\t}\n\n\t\tfor (var i=0; i<this._cardsByPoint.length; i++) {\n\t\t\tif (this._cardsByPoint[i].point==13 || this._cardsByPoint[i].point==14) {\n\t\t\t\tresult.push(this._cardsByPoint[i].cards[0]);\n\t\t\t}\n\t\t}\n\n\t\tif (result.length < 2) {\n\t\t\tresult = [];\n\t\t}\n\n\t\treturn [result];\n\t},\n\n\t//找连队\n\t_findContinueDouble: function() {\n\t\t// 找连对\n\t\tvar continueDouble = [];\n\t\tvar tmpResult = [];\n\t\tvar tmpArr = this._cardsByPoint;\n\n\t\tfor (var i=0; i<tmpArr.length; i++) {\n\t\t\tvar t = tmpArr[i];\n\t\t\tif (t.point>=12) {\n\t\t\t\t//2、小王、大王\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (t.count < 2) {\n\t\t\t\tif (tmpResult.length >= 6){\n\t\t\t\t\tcontinueDouble.push(tmpResult);\n\t\t\t\t}\n\t\t\t\ttmpResult = [];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (tmpResult.length == 0) {\n\t\t\t\ttmpResult.push(t.cards[0]);\n\t\t\t\ttmpResult.push(t.cards[1]);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// 比i-1组的point大于1，才可添加到数组中\n\t\t\tvar prevCard = tmpArr[i-1];\n\t\t\tif ((t.point-prevCard.point) != 1) {\n\t\t\t\t// 断了\n\t\t\t\tif (tmpResult.length >= 6){\n\t\t\t\t\tcontinueDouble.push(tmpResult);\n\t\t\t\t}\n\t\t\t\ttmpResult = [];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttmpResult.push(t.cards[0]);\n\t\t\ttmpResult.push(t.cards[1]);\n\n\t\t\t// if (tmpResult.length >= 6) {\n\t\t\t// \tvar oneResult = tmpResult.slice(0);\n\t\t\t// \tcontinueDouble.push(oneResult);\n\t\t\t// }\n\t\t}\n\n\t\tif (tmpResult.length >= 6){\n\t\t\tcontinueDouble.push(tmpResult);\n\t\t}\n\t\treturn continueDouble;\n\t},\n\n\t//找仨带一个:从已有的单牌和三张结果中拼凑，单张中除去癞子牌，除去已包涵在三张中的\n\t_findThreeWithOne: function(singleRes, threeRes) {\n\t\tvar result = [];\n\t\tthis._existTester.reset();\n\t\tfor (var i=0; i<threeRes.length; i++) {\n\t\t\tfor (var j=0; j<singleRes.length; j++) {\n\t\t\t\tif (this._isLz(singleRes[j][0]) || this._isHave(threeRes[i], singleRes[j][0])) {\n\t\t\t\t\t// 排除单张癞子\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (this._existTester.isExist(threeRes[i], singleRes[j])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar res = [];\n\t\t\t\tres.push(threeRes[i][0]);\n\t\t\t\tres.push(threeRes[i][1]);\n\t\t\t\tres.push(threeRes[i][2]);\n\t\t\t\tres.push(singleRes[j][0]);\n\t\t\t\tresult.push(res);\n\t\t\t}\n\t\t}\n\n\t\tcc.log('threeWithOne result = ' + JSON.stringify(result));\n\t\treturn result;\n\t},\n\n\t//找仨带一个对子，排除对子中包换癞子的牌，和三个中包涵对子牌的对子\n\t_findThreeWithDouble: function(doubleRes, threeRes) {\n\t\tvar result = [];\n\t\tthis._existTester.reset();\n\t\tfor (var i=0; i<threeRes.length; i++) {\n\t\t\tfor (var j=0; j<doubleRes.length; j++) {\n\t\t\t\tif (this._isLz(doubleRes[j][0]) || this._isLz(doubleRes[j][1])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (this._isHave(threeRes[i], doubleRes[j][0]) || this._isHave(threeRes[i], doubleRes[j][1])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (this._existTester.isExist(threeRes[i], doubleRes[j])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar res = [];\n\t\t\t\tfor (var k=0; k<3; k++) {\n\t\t\t\t\tres.push(threeRes[i][k]);\n\t\t\t\t}\n\t\t\t\tfor (var l=0; l<2; l++) {\n\t\t\t\t\tres.push(doubleRes[j][l]);\n\t\t\t\t}\n\t\t\t\tresult.push(res);\n\t\t\t}\n\t\t}\n\n\t\tcc.log('threeWithDouble result = ' + JSON.stringify(result));\n\t\treturn result;\n\t},\n\n\t//找飞机：遍历数组point<12，且两个连续位置的牌数大于等于3\n\t_findPlane: function() {\n\t\tvar result = [];\n\n\t\tfor (var i=0; i<this._cardsByPoint.length-1; i++) {\n\t\t\tvar t = this._cardsByPoint[i];\n\t\t\tif (t.point >= 11) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar next = this._cardsByPoint[i+1];\n\t\t\tif (next.point - t.point != 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (t.count>=3 && next.count>=3) {\n\t\t\t\tvar tmp = [];\n\t\t\t\tfor (var j=0; j<3; j++) {\n\t\t\t\t\ttmp.push(t.cards[j]);\n\t\t\t\t\ttmp.push(next.cards[j]);\n\t\t\t\t}\n\t\t\t\tresult.push(tmp);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//加癞子的解\n\t\t\tvar needLzCnt = 6-((t.count>3?3:t.count)+(next.count>3?3:next.count));\n\t\t\tif (needLzCnt > this._lzCardsPoint.count) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar tmp2 = [];\n\t\t\tfor(var k=0; k<(t.count>3?3:t.count); k++) {\n\t\t\t\ttmp2.push(t.cards[k]);\n\t\t\t}\n\t\t\tfor(var l=0; l<(next.count>3?3:next.count); l++) {\n\t\t\t\ttmp2.push(next.cards[l]);\n\t\t\t}\n\t\t\tfor (var m=0; m<needLzCnt; m++) {\n\t\t\t\ttmp2.push(this._lzCardsPoint.cards[m]);\n\t\t\t}\n\t\t\tresult.push(tmp2);\n\t\t}\n\n\t\tddz.LOGD(this._TAG, 'plane result = ' + JSON.stringify(result));\n\t\treturn result;\n\t},\n\n\t// 查找飞机带翅膀：飞机中含有癞子牌，需要排除包含在飞机中的单牌\n\t_findPlaneWithSingle: function(planeRes, singleRes) {\n\t\tvar result = [];\n\t\tfor (var i=0; i<planeRes.length; i++) {\n\t\t\tvar temp = planeRes[i].slice(0);\n\t\t\tfor (var j=0; j<singleRes.length-1; j++) {\n\t\t\t\tif (this._isHave(planeRes[i], singleRes[j][0])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttemp.push(singleRes[j][0]);\n\t\t\t\tfor (var k=j+1; k<singleRes.length; k++) {\n\t\t\t\t\tif (this._isHave(planeRes[i], singleRes[k][0])) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttemp.push(singleRes[k][0]);\n\t\t\t\t\tresult.push(temp.slice(0));\n\t\t\t\t\t// 将单牌扔出去\n\t\t\t\t\ttemp.pop();\n\t\t\t\t}\n\t\t\t\t// 将单牌扔出去\n\t\t\t\ttemp.pop();\n\t\t\t}\n\t\t}\n\n\t\tddz.LOGD(this._TAG, 'plane with single = ' + JSON.stringify(result));\n\t\treturn result;\n\t},\n\n\t// 查找飞机带俩对\n\t_findPlaneWithDouble: function(planeRes, doubleRes) {\n\t\tvar result = [];\n\t\tfor (var i=0; i<planeRes.length; i++) {\n\t\t\tvar temp = planeRes[i].slice(0);\n\t\t\tfor (var j=0; j<doubleRes.length-1; j++) {\n\t\t\t\tif (this._isHave(planeRes[i], doubleRes[j][0]), this._isHave(planeRes[i], doubleRes[j][1])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttemp.push(doubleRes[j][0]);\n\t\t\t\ttemp.push(doubleRes[j][1]);\n\n\t\t\t\tfor (var k=j+1; k<doubleRes.length; k++) {\n\t\t\t\t\tif (this._isHave(planeRes[i], doubleRes[k][0]) ||this._isHave(planeRes[i], doubleRes[k][1])) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttemp.push(doubleRes[k][0]);\n\t\t\t\t\ttemp.push(doubleRes[k][1]);\n\t\t\t\t\tresult.push(temp.slice(0));\n\t\t\t\t\t// 将对子扔出去\n\t\t\t\t\ttemp.pop();\n\t\t\t\t\ttemp.pop();\n\t\t\t\t}\n\t\t\t\t// 将对子扔出去\n\t\t\t\ttemp.pop();\n\t\t\t\ttemp.pop();\n\t\t\t}\n\t\t}\n\t\tddz.LOGD(this._TAG, 'plane with double = ' + JSON.stringify(result));\n\t\treturn result;\n\t},\n\n\t//查找顺子\n\t_findShunZi: function() {\n\t\tvar result = [];\n\t\tvar lzUsedYet = 0;\n\t\tif (this._cardsByPoint.length < 5) {\n\t\t\treturn result;\n\t\t}\n\t\tvar tmp = [];\n\t\tvar curPutPoint = -2;\n\t\tfor(var i=0; i<this._cardsByPoint.length; i++) {\n\t\t\tvar t = this._cardsByPoint[i];\n\t\t\tif (t.point >= 12) {\n\t\t\t\tif (tmp.length >= 5) {\n\t\t\t\t\tresult.push(tmp.slice(0));\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (tmp.length <= 0) {\n\t\t\t\t//放入一个数\n\t\t\t\tlzUsedYet = 0;\n\t\t\t\ttmp.push(t.cards[0]);\n\t\t\t\tcurPutPoint = t.point;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//判读当前的value是否和tmp中的最后一个数的value是否是连续的\n\t\t\tif (t.point-curPutPoint == 1) {\n\t\t\t\ttmp.push(t.cards[0]);\n\t\t\t\tcurPutPoint = t.point;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//放癞子牌\n\t\t\tif (this._lzCardsPoint.count-lzUsedYet<=0) {\n\t\t\t\tif (tmp.length >= 5) {\n\t\t\t\t\tresult.push(tmp.slice(0));\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlzUsedYet += 1;\n\t\t\tcurPutPoint += 1;\n\t\t\ttmp.push(this._lzCardsPoint.cards[0]);\n\t\t\t//放入癞子后重新检测\n\t\t\ti--;\n\t\t}\n\n\t\tif (tmp.length>5) {\n\t\t\tresult.push(tmp.slice(0));\n\t\t}\n\n\t\tddz.LOGD(this._TAG, 'shunzi result = ' + JSON.stringify(result));\n\n\t\treturn result;\n\t},\n\n\t// 一个数组中是否有癞子、王\n\t_isOutOfAK: function(src) {\n\t\tfor (var i=0; i<src.length; i++) {\n\t\t\tif (this._isLz(src[i]) || this._isKing(src[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t//找对子和癞子凑三张\n\t_isLz: function(num) {\n\t\treturn num > 53;\n\t},\n\n\t_isKing: function(num) {\n\t\treturn num==52 || num==53;\n\t},\n\n\t_isHave: function(src, num) {\n\t\tfor (var i=0; i<src.length; i++) {\n\t\t\tif (src[i] == num) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_canWork: function() {\n\t\tif (!this._cardsByPoint || !this._lzCardsPoint) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\n});"]}