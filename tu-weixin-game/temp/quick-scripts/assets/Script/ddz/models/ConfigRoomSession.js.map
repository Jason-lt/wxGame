{"version":3,"sources":["ConfigRoomSession.js"],"names":["ddz","ConfigRoomSession","cc","Class","ctor","info","arguments","session","description","match","fruit","m_rooms","m_type","Enums","PlayType","PLAY_TYPE_JINGDIAN","m_existNewMatch","parse","json","myrooms","rooms","i","len","length","push","NormalRoomInfo","PLAY_TYPE_HUANLE","PLAY_TYPE_MATCH","PLAY_TYPE_LAIZI","PLAY_TYPE_ERREN"],"mappings":";;;;;;AAAA;;;;AAIAA,IAAIC,iBAAJ,GAAwBC,GAAGC,KAAH,CAAS;;AAE7BC,UAAM,gBAAW;AACb,YAAIC,OAAOC,UAAU,CAAV,CAAX;AACA,aAAKC,OAAL,GAAe,EAAf;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,OAAL,GAAe,EAAf,CANa,CAMM;AACnB,aAAKC,MAAL,GAAcZ,IAAIa,KAAJ,CAAUC,QAAV,CAAmBC,kBAAjC,CAPa,CAOwC;AACrD,aAAKC,eAAL,GAAuB,CAAvB,CARa,CAQa;AAC1B,YAAGX,IAAH,EAAS;AACL,iBAAKY,KAAL,CAAWZ,IAAX;AACH;AACJ,KAd4B;AAe7BY,WAAO,eAASC,IAAT,EAAe;AAClB,aAAKX,OAAL,GAAeW,KAAK,SAAL,CAAf;AACA,aAAKT,KAAL,GAAaS,KAAK,OAAL,CAAb;AACA,aAAKR,KAAL,GAAaQ,KAAK,OAAL,CAAb;;AAEA,YAAIC,UAAU,EAAd;AACA,YAAIC,QAAQF,KAAK,OAAL,CAAZ;AACA,aAAK,IAAIG,IAAI,CAAR,EAAWC,MAAMF,MAAMG,MAA5B,EAAoCF,IAAIC,GAAxC,EAA6CD,GAA7C,EAAkD;AAC9CF,oBAAQK,IAAR,CAAa,IAAIxB,IAAIyB,cAAR,CAAuBL,MAAMC,CAAN,CAAvB,CAAb;AACH;AACD,aAAKV,OAAL,GAAeQ,OAAf;;AAEA,gBAAQ,KAAKZ,OAAb;AACI,iBAAK,KAAL;AACI,qBAAKK,MAAL,GAAcZ,IAAIa,KAAJ,CAAUC,QAAV,CAAmBC,kBAAjC;AACA;AACJ,iBAAK,KAAL;AACI,qBAAKH,MAAL,GAAcZ,IAAIa,KAAJ,CAAUC,QAAV,CAAmBY,gBAAjC;AACA;AACJ,iBAAK,KAAL;AACI,qBAAKd,MAAL,GAAcZ,IAAIa,KAAJ,CAAUC,QAAV,CAAmBa,eAAjC;AACA,qBAAKX,eAAL,GAAuBE,KAAK,KAAL,CAAvB;AACA;AACJ,iBAAK,KAAL;AACI,qBAAKN,MAAL,GAAcZ,IAAIa,KAAJ,CAAUC,QAAV,CAAmBc,eAAjC;AACA;AACJ,iBAAK,KAAL;AACI,qBAAKhB,MAAL,GAAcZ,IAAIa,KAAJ,CAAUC,QAAV,CAAmBe,eAAjC;AACA;AACJ,iBAAK,MAAL;AACI;AACJ;AACI;AApBR;AAsBH;AAjD4B,CAAT,CAAxB","file":"ConfigRoomSession.js","sourceRoot":"../../../../../../assets/Script/ddz/models","sourcesContent":["/**\n * Created by xujing on 2018/2/1.\n */\n\nddz.ConfigRoomSession = cc.Class({\n\n    ctor: function() {\n        var info = arguments[0];\n        this.session = \"\";\n        this.description = \"\";\n        this.match = 0;\n        this.fruit = 0;\n        this.m_rooms = []; //用于存放ddz.ConfigRoom类对象\n        this.m_type = ddz.Enums.PlayType.PLAY_TYPE_JINGDIAN; //根据session来设定type，用于通过roomid判断是什么场\n        this.m_existNewMatch = 0; //判断是否有新增比赛\n        if(info) {\n            this.parse(info);\n        }\n    },\n    parse: function(json) {\n        this.session = json[\"session\"];\n        this.match = json[\"match\"];\n        this.fruit = json[\"fruit\"];\n\n        var myrooms = [];\n        var rooms = json[\"rooms\"];\n        for (var i = 0, len = rooms.length; i < len; i++) {\n            myrooms.push(new ddz.NormalRoomInfo(rooms[i]));\n        }\n        this.m_rooms = myrooms;\n\n        switch (this.session) {\n            case \"经典场\":\n                this.m_type = ddz.Enums.PlayType.PLAY_TYPE_JINGDIAN;\n                break;\n            case \"欢乐场\":\n                this.m_type = ddz.Enums.PlayType.PLAY_TYPE_HUANLE;\n                break;\n            case \"比赛场\":\n                this.m_type = ddz.Enums.PlayType.PLAY_TYPE_MATCH;\n                this.m_existNewMatch = json[\"new\"];\n                break;\n            case \"癞子场\":\n                this.m_type = ddz.Enums.PlayType.PLAY_TYPE_LAIZI;\n                break;\n            case \"二斗场\":\n                this.m_type = ddz.Enums.PlayType.PLAY_TYPE_ERREN;\n                break;\n            case \"水果大亨\":\n                break;\n            default:\n                break;\n        }\n    }\n});"]}