{"version":3,"sources":["../../../../../assets/Script/ddz/assets/Script/ddz/AITypeJudger.js"],"names":["_is1","dicarr","lz_obj","types","pos","point","cards","count","concat","push","ddz","CardType","Enums","PaixingType","SINGLE_CARD","_is2","i","length","tmp","need","j","GlobalFuncs","getLaiziNumByValue","cardType","DOUBLE_CARD","_isRocket","arr","ROCKET","_is3","index","slice","n","THREE_CARD","_is31","left","lz_card","THREE_ONE_CARD","_checkDoubles","c","lz_need","num","_is32","newarr","hall","GetSubArrayExceptIndex","result","THREE_TWO_CARD","_isBomb","laiZiCnt","BOMB_CARD","_is411","BOMB_TWO_CARD","_is422","BOMB_TWO_TWO_CARD","_is3311","LOGD","tmp1","tmp2","need1","need2","cards1","cards2","AIRCRAFT_SINGLE_CARD","_is3322","subarr","AIRCRAFT_DOUBLE_CARD","_is333111","tmp3","need3","_is333222","_is33331111","tmp4","need4","_is3333311111","tmp5","need5","_isContinuous","total_count","cell_count","lz_use","card_use","sub_index","clen","SHUNZI_CARD","LIANDUI_CARD","AIRCRAFT_CARD","AITypeJudger","len"],"mappings":"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","file":"AITypeJudger.js","sourceRoot":"../../../../../assets/Script/ddz","sourcesContent":["var _is1 = function(dicarr, lz_obj, types) { //单牌\n\tvar pos = dicarr[0].point;\n\tvar cards = dicarr[0].cards;\n\tif (dicarr[0].count < 1) {\n\t\tcards = cards.concat(lz_obj.cards);\n\t}\n\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.SINGLE_CARD, pos, 1, cards));\n};\n\nvar _is2 = function(dicarr, lz_obj, types) { //对子\n\tfor (var i = 0; i < dicarr.length; i++) {\n\t\tvar tmp = dicarr[i];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 2 - tmp.count;\n\t\tif (need <= lz_obj.count) {\n\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\tcards.push(ddz.GlobalFuncs.getLaiziNumByValue(tmp.point));\n\t\t\t}\n\t\t\tvar cardType = new ddz.CardType(ddz.Enums.PaixingType.DOUBLE_CARD, tmp.point, 2, cards);\n\t\t\ttypes.push(cardType);\n\t\t}\n\t}\n};\n\nvar _isRocket = function(arr, types) { //火箭\n\tif ((arr[0] == 52 && arr[1] == 53) || (arr[0] == 53 && arr[1] == 52)) {\n\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.ROCKET, 13, 2, [52, 53]));\n\t}\n};\n\nvar _is3 = function(dicarr, lz_obj, types) {\n\tfor (var index = 0; index < dicarr.length; index++) {\n\t\tvar tmp = dicarr[index];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 3 - tmp.count;\n\t\tif (need == lz_obj.count) {\n\t\t\tvar cards = tmp.cards.slice(0);\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.THREE_CARD, tmp.point, 3, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n// 3带1\nvar _is31 = function(dicarr, lz_obj, types) { //3334(0癞子) 33L4(1癞子，如果333L则是炸弹), 3LL4(2癞子，L代表较大的4), 3癞子的话会是炸弹, 所以带癞子的话，一定有3种value\n\tfor (var index = 0; index < dicarr.length; index++) {\n\t\tvar tmp = dicarr[index];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 3 - tmp.count;\n\t\tif (need < 0) {\n\t\t\tneed = 0;\n\t\t}\n\t\tif (need <= lz_obj.count) {\n\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//如果有剩下癞子牌，直接按原值推进\n\t\t\tvar left = lz_obj.count - need;\n\t\t\tif (left > 0) {\n\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\tfor (var j = 0; j < left; j++) {\n\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//剩下的牌直接推进去\n\t\t\tfor (var j = 0; j < dicarr.length; j++) {\n\t\t\t\tif (j != index) {\n\t\t\t\t\tcards = cards.concat(dicarr[j].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.THREE_ONE_CARD, tmp.point, 4, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/**\n * 验证在dicarr中是否正好凑count个对子，有lz_count个癞子。\n * @param dicarr\n * @param count\n * @param lz_obj\n * @returns {*}\n * @private\n */\nvar _checkDoubles = function(dicarr, count, lz_obj) {\n\tvar c = 0; //总共对子数\n\tvar lz_need = 0; //总共需要的癞子数\n\tvar cards = [];\n\tfor (var index = 0; index < dicarr.length; index++) {\n\t\tvar tmp = dicarr[index];\n\t\tif (tmp.count == 0 || tmp.point > 12) { //癞子不进行计算\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 2 - tmp.count;\n\t\tif (need < 0) {\n\t\t\tc += 2;\n\t\t\tneed = need == -2 ? 0 : 1; //need = -2，则lz_need不增加，need = -1，则lz_need++\n\t\t} else {\n\t\t\tc += 1;\n\t\t}\n\t\tlz_need += need;\n\t\tif (lz_need <= lz_obj.count) {\n\t\t\tcards = cards.concat(tmp.cards);\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tvar num = lz_obj.count - lz_need;\n\tif (c * 2 + num == count * 2) { //剩余的没拿去凑数的癞子，按原值存储.这里是判断剩下的癞子数是偶数，可以拿来凑对子，（总牌数有限制保证，不需要判断）\n\t\tvar n = lz_obj.cards[0];\n\t\tfor (var j = 0; j < num; j++) {\n\t\t\tcards.push(n);\n\t\t}\n\t\treturn cards;\n\t}\n\treturn null;\n};\n\n// 3带1对\nvar _is32 = function(dicarr, lz_obj, types) {\n\tfor (var index = 0; index < dicarr.length; index++) {\n\t\tvar tmp = dicarr[index];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 3 - tmp.count;\n\t\tif (need < 0) { //4444L，不能拼成3带2，否则变成5个4\n\t\t\tcontinue;\n\t\t}\n\t\tif (need <= lz_obj.count) { //癞子够拼\n\t\t\tvar cards = tmp.cards.slice(0);\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//要求剩下的可以拼成一对， 因为总数是5张，拼成了3张，剩下的只要找到一对就行\n\t\t\tvar newarr = hall.GlobalFuncs.GetSubArrayExceptIndex(dicarr, [index]);\n\t\t\tvar result = _checkDoubles(newarr, 1, {\n\t\t\t\tpoint: lz_obj.point,\n\t\t\t\tcount: lz_obj.count - need,\n\t\t\t\tcards: lz_obj.cards\n\t\t\t});\n\t\t\tif (result) { // 剩下的正好是一对\n\t\t\t\tcards = cards.concat(result);\n\t\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.THREE_TWO_CARD, tmp.point, 5, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n//炸弹\nvar _isBomb = function(dicarr, lz_obj, types, laiZiCnt) {\n\tfor (var i = 0; i < dicarr.length; i++) {\n\t\tvar tmp = dicarr[i];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 4 - tmp.count;\n\t\tif (need == lz_obj.count) {\n\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\t//用到的癞子牌\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.BOMB_CARD, tmp.point, 4, cards, laiZiCnt));\n\t\t}\n\t}\n};\n\n// 4带2单\nvar _is411 = function(dicarr, lz_obj, types) { //跟31几乎完全一样\n\tfor (var index = 0; index < dicarr.length; index++) {\n\t\tvar tmp = dicarr[index];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 4 - tmp.count; //need不可能小于0\n\t\tif (need <= lz_obj.count) {\n\t\t\tvar cards = [].concat(tmp.cards);\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//如果有剩下癞子牌，直接按原值推进\n\t\t\tvar left = lz_obj.count - need;\n\t\t\tif (left > 0) {\n\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\tfor (var j = 0; j < left; j++) {\n\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//剩下的牌直接推进去\n\t\t\tfor (var j = 0; j < dicarr.length; j++) {\n\t\t\t\tif (j != index) {\n\t\t\t\t\tcards = cards.concat(dicarr[j].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.BOMB_TWO_CARD, tmp.point, 6, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n// 4带2对\nvar _is422 = function(dicarr, lz_obj, types) { //目前444455LL会被处理成5555带2对4，也就是炸弹在需要的时候会被拆成2个对\n\tfor (var index = 0; index < dicarr.length; index++) {\n\t\tvar tmp = dicarr[index];\n\t\tif(tmp.point > 12) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar need = 4 - tmp.count;\n\t\tif (need <= lz_obj.count) { //癞子够拼\n\t\t\tvar cards = tmp.cards.slice(0);\n\t\t\tif (need > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//要求剩下的可以拼成2对\n\t\t\tvar newarr = hall.GlobalFuncs.GetSubArrayExceptIndex(dicarr, [index]);\n\t\t\tvar result = _checkDoubles(newarr, 2, {\n\t\t\t\tpoint: lz_obj.point,\n\t\t\t\tcount: lz_obj.count - need,\n\t\t\t\tcards: lz_obj.cards\n\t\t\t});\n\t\t\tif (result) { // 剩下的正好是一对\n\t\t\t\tcards = cards.concat(result);\n\t\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD, tmp.point, 8, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// 2顺带2单\nvar _is3311 = function(newarr, lz_obj, types) { //总共8个牌，只要找出2个3顺，剩余2牌一定符合规则\n\tddz.LOGD(null, \"[_is3311][in]\");\n\tfor (var index = 3; index < newarr.length - 1; index++) { //不包含2，从A开始找,出去大王，小王，2\n\t\tvar tmp1 = newarr[index];\n\t\tvar tmp2 = newarr[index + 1];\n\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\tvar need2 = 3 - tmp2.count;\n\t\tif (need1 < 0) {\n\t\t\tneed1 = 0;\n\t\t}\n\t\tif (need2 < 0) {\n\t\t\tneed2 = 0;\n\t\t}\n\t\tvar left = lz_obj.count - need1 - need2;\n\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\t//var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\tvar cards1 = tmp1.cards.slice(0);\n\t\t\tvar cards2 = tmp2.cards.slice(0);\n\t\t\tif (need1 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\tcards1.push(n);  //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t//tmp1.cards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (need2 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\tcards2.push(n);  //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t}\n\t\t\t}\n\t\t\t//var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\tvar cards = cards1.concat(cards2); //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\tif (left > 0) {\n\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//剩余的牌推进去\n\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\tif (i != index && i != index + 1) {\n\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp2.point, 8, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n// 3顺带2对\nvar _is3322 = function(newarr, lz_obj, types) {\n\tfor (var index = 3; index < newarr.length - 1; index++) { //不包含2，从A开始找\n\t\tvar tmp1 = newarr[index];\n\t\tvar tmp2 = newarr[index + 1];\n\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\tvar need2 = 3 - tmp2.count;\n\t\tif (need1 < 0) {\n\t\t\tneed1 = 0;\n\t\t}\n\t\tif (need2 < 0) {\n\t\t\tneed2 = 0;\n\t\t}\n\t\tvar left = lz_obj.count - need1 - need2;\n\t\tif (left >= 0) { //可以拼成2个三顺，要求剩下的牌可以拼成2个对子\n\t\t\t//要求剩下的可以拼成2对\n\t\t\tvar subarr = hall.GlobalFuncs.GetSubArrayExceptIndex(newarr, [index, index + 1]);\n\t\t\tvar result = _checkDoubles(subarr, 2, {\n\t\t\t\t\"point\": lz_obj.point,\n\t\t\t\t\"count\": left,\n\t\t\t\t\"cards\": lz_obj.cards\n\t\t\t});\n\t\t\tif (result) { // 剩下的正好是2对\n\t\t\t\t//开始把牌放入cards\n\t\t\t\t//var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\tvar cards1 = tmp1.cards.slice(0);\n\t\t\t\tvar cards2 = tmp2.cards.slice(0);\n\t\t\t\tif (need1 > 0) {\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\tcards1.push(n);  //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (need2 > 0) {\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\tcards2.push(n);   //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar cards = cards1.concat(cards2); //[20140526][jinrifeng] 修改带有癞子的飞机带2个时，显示顺序错误问题\n\t\t\t\tcards = cards.concat(result);\n\t\t\t\tvar cardType = new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD, tmp2.point, 10, cards);\n\t\t\t\ttypes.push(cardType);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// 3顺带3单\nvar _is333111 = function(newarr, lz_obj, types) {\n\tfor (var index = 3; index < newarr.length - 2; index++) { //不包含2，从A开始找\n\t\tvar tmp1 = newarr[index];\n\t\tvar tmp2 = newarr[index + 1];\n\t\tvar tmp3 = newarr[index + 2];\n\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\tvar need2 = 3 - tmp2.count;\n\t\tvar need3 = 3 - tmp3.count;\n\t\tif (need1 < 0) {\n\t\t\tneed1 = 0;\n\t\t}\n\t\tif (need2 < 0) {\n\t\t\tneed2 = 0;\n\t\t}\n\t\tif (need3 < 0) {\n\t\t\tneed3 = 0;\n\t\t}\n\t\tvar left = lz_obj.count - need1 - need2 - need3;\n\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\t// var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t// cards = cards.concat(tmp3.cards);\n\t\t\tvar cards = tmp1.cards.concat([]);\n\t\t\tif (need1 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp2.cards);\n\t\t\tif (need2 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\tif (need3 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\tif (left > 0) {\n\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//剩余的牌推进去\n\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\tif (i != index && i != index + 1 && i != index + 2) {\n\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp3.point, 12, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n// 3顺带3对\nvar _is333222 = function(newarr, lz_obj, types) {\n\tfor (var index = 3; index < newarr.length - 2; index++) { //不包含2，从A开始找\n\t\tvar tmp1 = newarr[index];\n\t\tvar tmp2 = newarr[index + 1];\n\t\tvar tmp3 = newarr[index + 2];\n\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\tvar need2 = 3 - tmp2.count;\n\t\tvar need3 = 3 - tmp3.count;\n\t\tif (need1 < 0) {\n\t\t\tneed1 = 0;\n\t\t}\n\t\tif (need2 < 0) {\n\t\t\tneed2 = 0;\n\t\t}\n\t\tif (need3 < 0) {\n\t\t\tneed3 = 0;\n\t\t}\n\t\tvar left = lz_obj.count - need1 - need2 - need3;\n\t\tif (left >= 0) { //可以拼成2个三顺，要求剩下的牌可以拼成2个对子\n\t\t\t//要求剩下的可以拼成2对\n\t\t\tvar subarr = hall.GlobalFuncs.GetSubArrayExceptIndex(newarr, [index, index + 1, index + 2]);\n\t\t\tvar result = _checkDoubles(subarr, 3, {\n\t\t\t\tpoint: lz_obj.point,\n\t\t\t\tcount: left,\n\t\t\t\tcards: lz_obj.cards\n\t\t\t});\n\t\t\tif (result) { // 剩下的正好是3对\n\t\t\t\t//开始把牌放入cards\n\t\t\t\t// var cards = tmp1.cards.concat(tmp2.cards);\n\t\t\t\t// cards = cards.concat(tmp3.cards);\n\t\t\t\tvar cards = tmp1.cards.concat([]);\n\t\t\t\tif (need1 > 0) {\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcards = cards.concat(tmp2.cards);\n\t\t\t\tif (need2 > 0) {\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\t\tif (need3 > 0) {\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcards = cards.concat(result);\n\t\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD, tmp3.point, 15, cards));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// 4顺带4单\nvar _is33331111 = function(newarr, lz_obj, types) {\n\tfor (var index = 3; index < newarr.length - 3; index++) { //不包含2，从A开始找\n\t\tvar tmp1 = newarr[index];\n\t\tvar tmp2 = newarr[index + 1];\n\t\tvar tmp3 = newarr[index + 2];\n\t\tvar tmp4 = newarr[index + 3];\n\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\tvar need2 = 3 - tmp2.count;\n\t\tvar need3 = 3 - tmp3.count;\n\t\tvar need4 = 3 - tmp4.count;\n\t\tif (need1 < 0) {\n\t\t\tneed1 = 0;\n\t\t}\n\t\tif (need2 < 0) {\n\t\t\tneed2 = 0;\n\t\t}\n\t\tif (need3 < 0) {\n\t\t\tneed3 = 0;\n\t\t}\n\t\tif (need4 < 0) {\n\t\t\tneed4 = 0;\n\t\t}\n\t\tvar left = lz_obj.count - need1 - need2 - need3 - need4;\n\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\tvar cards = tmp1.cards.concat([]);\n\t\t\tif (need1 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp2.cards);\n\t\t\tif (need2 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\tif (need3 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp4.cards);\n\t\t\tif (need4 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp4.point);\n\t\t\t\tfor (var i = 0; i < need4; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\tif (left > 0) {\n\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//剩余的牌推进去\n\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\tif (i != index && i != index + 1 && i != index + 2 && i != index + 3) {\n\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp4.point, 16, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n//5顺带5单\nvar _is3333311111 = function(newarr, lz_obj, types) {\n\tfor (var index = 3; index < newarr.length - 4; index++) { //不包含2，从A开始找\n\t\tvar tmp1 = newarr[index];\n\t\tvar tmp2 = newarr[index + 1];\n\t\tvar tmp3 = newarr[index + 2];\n\t\tvar tmp4 = newarr[index + 3];\n\t\tvar tmp5 = newarr[index + 4];\n\t\tvar need1 = 3 - tmp1.count; //4444555L，应该判断成3个4，3个5，带2单\n\t\tvar need2 = 3 - tmp2.count;\n\t\tvar need3 = 3 - tmp3.count;\n\t\tvar need4 = 3 - tmp4.count;\n\t\tvar need5 = 3 - tmp5.count;\n\t\tif (need1 < 0) {\n\t\t\tneed1 = 0;\n\t\t}\n\t\tif (need2 < 0) {\n\t\t\tneed2 = 0;\n\t\t}\n\t\tif (need3 < 0) {\n\t\t\tneed3 = 0;\n\t\t}\n\t\tif (need4 < 0) {\n\t\t\tneed4 = 0;\n\t\t}\n\t\tif (need5 < 0) {\n\t\t\tneed5 = 0;\n\t\t}\n\t\tvar left = lz_obj.count - need1 - need2 - need3 - need4 - need5;\n\t\tif (left >= 0) { //只要癞子够凑成33就行，剩下的2个牌\n\t\t\tvar cards = tmp1.cards.concat([]);\n\t\t\tif (need1 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp1.point);\n\t\t\t\tfor (var i = 0; i < need1; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp2.cards);\n\t\t\tif (need2 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp2.point);\n\t\t\t\tfor (var i = 0; i < need2; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp3.cards);\n\t\t\tif (need3 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp3.point);\n\t\t\t\tfor (var i = 0; i < need3; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp4.cards);\n\t\t\tif (need4 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp4.point);\n\t\t\t\tfor (var i = 0; i < need4; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp5.cards);\n\t\t\tif (need5 > 0) {\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp5.point);\n\t\t\t\tfor (var i = 0; i < need5; i++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//把剩下的癞子牌按原值推进去\n\t\t\tif (left > 0) {\n\t\t\t\tvar lz_card = lz_obj.cards[0];\n\t\t\t\tfor (var i = 0; i < left; i++) {\n\t\t\t\t\tcards.push(lz_card);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//剩余的牌推进去\n\t\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\t\tif (i != index && i != index + 1 && i != index + 2 && i != index + 3 && i != index + 4) {\n\t\t\t\t\tcards = cards.concat(newarr[i].cards);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypes.push(new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD, tmp5.point, 20, cards));\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nvar _isContinuous = function(newarr, lz_obj, total_count, types, cell_count) { //newarr为345-k的数组， cell_count为每个单元的数量（顺子1连对2飞机3）\n\tif (newarr[0].count > 0 || newarr[1].count > 0 || newarr[2].count > 0) { //大小王，2不能出现在顺连对飞机中，如果有2，一定不符合。如果2为癞子牌，不当本身值使用，所以下面循环index从1开始\n\t\treturn;\n\t}\n\tfor (var index = 3; index < newarr.length; index++) {\n\t\tvar lz_use = 0;\n\t\tvar i = 0;\n\t\tvar cards = [];\n\t\tvar point = -1;\n\t\tvar card_use = 0;\n\t\twhile (i <= newarr.length - index - 1) {\n\t\t\tvar sub_index = index + i;\n\t\t\tvar tmp = newarr[sub_index];\n\t\t\tvar need = cell_count - tmp.count;\n\t\t\tif (need < 0) {\n\t\t\t\tcards = []; //牌型不符合规则的时候\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lz_use > lz_obj.count - need) { //如果需要的癞子数超过了，则break出去，检查之后是否还有剩余牌，则会导致剩余牌，不符合规则，所以清空cards\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlz_use += need;\n\t\t\tpoint = tmp.point;\n\t\t\tcards = cards.concat(tmp.cards);\n\t\t\tif (need > 0) { //需要用癞子补，则把癞子转换成相应的值\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(point);\n\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcard_use += tmp.count;\n\t\t\ti++;\n\t\t}\n\t\tvar clen = cards.length;\n\n\t\tif (clen >= 5 && lz_obj.count == lz_use && card_use + lz_use == total_count) { // 不能有癞子牌剩余，也不能有手牌剩余，3个条件都满足才行\n\t\t\tvar cardType;\n\t\t\tswitch (cell_count) {\n\t\t\t\tcase 1:\n\t\t\t\t\tcardType = new ddz.CardType(ddz.Enums.PaixingType.SHUNZI_CARD, point, clen, cards);\n\t\t\t\t\ttypes.push(cardType);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tcardType = new ddz.CardType(ddz.Enums.PaixingType.LIANDUI_CARD, point, clen, cards);\n\t\t\t\t\ttypes.push(cardType);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tcardType = new ddz.CardType(ddz.Enums.PaixingType.AIRCRAFT_CARD, point, clen, cards);\n\t\t\t\t\ttypes.push(cardType);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n};\n\n//  AI牌型判断的功能，抽象出来以减少ddz_robot.js的代码量\nddz.AITypeJudger = function(arr, dicarr, newarr, lz_obj, laiZiCnt) { //如果有癞子牌，传进来就是>53，转换成value就是15\n\tddz.LOGD(null, \"in judge type in robot ai....\");\n\tddz.LOGD(null, 'laiZiCnt=' + laiZiCnt);\n\n\tvar types = [];\n\tvar len = arr.length;\n\tddz.LOGD(null, \"[judgeType] len = \" + len);\n\n\tswitch (len) {\n\t\tcase 1:\n\t\t\t_is1(dicarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t_isRocket(arr, types);\n\t\t\t_is2(dicarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t_is3(dicarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 4: //4444会两种都判定符合，可以设定为只要判定是炸弹就返回，不再判定31\n\t\t\t_isBomb(dicarr, lz_obj, types, laiZiCnt);\n\t\t\t_is31(dicarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\t_is32(dicarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t_is411(dicarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\t_is422(dicarr, lz_obj, types);\n\t\t\t_is3311(newarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\t_is3322(newarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 12:\n\t\t\t_is333111(newarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 15:\n\t\t\t_is333222(newarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 16:\n\t\t\t_is33331111(newarr, lz_obj, types);\n\t\t\tbreak;\n\t\tcase 20:\n\t\t\t_is3333311111(newarr, lz_obj, types);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tif (len > 4) {\n\t\t_isContinuous(newarr, lz_obj, len, types, 1); //顺子\n\t\t_isContinuous(newarr, lz_obj, len, types, 2); //连对\n\t\t_isContinuous(newarr, lz_obj, len, types, 3); //飞机\n\t}\n\treturn types;\n};"]}