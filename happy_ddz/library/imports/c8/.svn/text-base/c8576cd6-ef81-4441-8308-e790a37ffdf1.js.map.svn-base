{"version":3,"sources":["../../../../../assets/Script/ddz/assets/Script/ddz/RobotGlobal.js"],"names":["ddz","RobotGlobal","rocketWin","cards","sort","c1","c2","len","length","left","slice","types","judgeType","cards_arr","bLzChangable","laiziCnt","i","dicarr","_getPointCountDicArray","lz_obj","getLaiziObject","newarr","_fillDicarr","AITypeJudger","GlobalFuncs","_sortByPoint","reverse","start","index","point","push","arr","cdic","key","num","pos","numberToValue","value","count","return_arr","parseInt","tmp","pointToValue","getSubPCArray","pcarray","filter","item","getPCArrayByPoint","sortByPoint","o1","o2","sortByCount","sortByLength","findAvailableContinousDevide","cell_count","lz_use","curIndex","sub_index","need","remainLzCnt","n","getLaiziNumByValue","j","concat","clen","oneResult","_sortByLength","findWinCardsFromArray","type","array","LOGD","tmpArr","getType","Enums","PaixingType","ROCKET","leftCards","SINGLE_CARD","findWinSingle","DOUBLE_CARD","findWinDouble","THREE_CARD","THREE_ONE_CARD","THREE_TWO_CARD","findWinThree","BOMB_CARD","findWinBomb","BOMB_TWO_CARD","BOMB_TWO_TWO_CARD","bombexts","bombs","findBomb","SHUNZI_CARD","LIANDUI_CARD","AIRCRAFT_CARD","AIRCRAFT_SINGLE_CARD","AIRCRAFT_DOUBLE_CARD","findWinContinous","pc","needSingleJoker","t","getPoint","realPoint","findRocket","nIndex","newCount","copyOnePCObj","dest","src","copyPCArr","pcObj","t_type","extra","findMinSingle","findMinDouble","lz_objTmp","pop","getBombType","getCount","lzcnt","getLaiziCnt","bombType","continue_count","Math","floor","laiziMax","exc","lz_used","tmp_cards","newlz","pcArray","c","bking","rking","ret","pLaizi","ex","bDivide","returnArr","indexOf","laizi_use","findAvailableAircraft","newarrpara","resultObj","findAvailableContinous","pairs","p_length","k","singles","index_report","findAvailableThree","leftArr","midResult"],"mappings":"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","file":"RobotGlobal.js","sourceRoot":"../../../../../assets/Script/ddz","sourcesContent":["//\n// ddz_robot_global.js\n// \n//\n// Created by guangy on 2015-07-06\n// \n//ai相关的一些全局通用函数\n\nddz.RobotGlobal = ddz.RobotGlobal || {};\n\nddz.RobotGlobal.rocketWin = function(cards) {\n\tcards.sort(function(c1, c2) { return c1 - c2; }); //先从小到大排列\n\tvar len = cards.length;\n\tif (cards[len - 1] == 53 && cards[len - 2] == 52) {\n\t\tif( cards.length == 2 ){\n\t\t\treturn true;\t\t// 只有两张牌了，大小王，必然是双王致胜\n\t\t}\n\n\t\tvar left = cards.slice(0, len - 2);\n\t\tvar types = ddz.RobotGlobal.judgeType(left, true);\n\t\tif (types.length > 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\n\n/**\n * @param cards_arr 带判断的牌数组\n * @param bLzChangable 表示癞子牌是否需要转化。判断topcard的时候，癞子牌已经是其实际值，\n * 不需要转化。主动出牌选牌时，癞子可以转换成任意牌\n * @returns {Array}\n */\nddz.RobotGlobal.judgeType = function(cards_arr, bLzChangable) { //\n    if(cards_arr.length == 0) {\n        return [];\n    }\n\n    var cards = cards_arr.slice(0);\t//避免修改原数组\n    var len = cards.length;\n\n\tvar laiziCnt = 0;\n\tif(!bLzChangable) {\t\t//癞子不可以转化，则把癞子牌转成其实际代表的牌\n\t\tfor(var i = 0; i < len; i++) {\n\t\t\tif(cards[i] > 53) {\n\t\t\t\tcards[i] -= 54;\n\t\t\t\t++laiziCnt;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar dicarr = this._getPointCountDicArray(cards);\n\tvar lz_obj = this.getLaiziObject(dicarr);\n\tvar newarr = this._fillDicarr(dicarr);\n\n\treturn ddz.AITypeJudger(cards, dicarr, newarr, lz_obj, laiziCnt);\n};\n\nddz.RobotGlobal._fillDicarr = function (dicarr) { //检测连续的时候，因为癞子可以用来填充连续，所以检测连续的数组必须把没有的点数用数量0填充\n\t//才能每个点数都检测到（虽然飞机的时候，因为癞子数只有4，不可能连续填充2个，但为了统一，还是全部填充）\n\tdicarr.sort(ddz.GlobalFuncs._sortByPoint);\n\tdicarr.reverse(); //按点数从大到小排列\n\tvar newarr = [];\n\tvar start = 14;\n\tfor (var index = 0; index < dicarr.length; index++) { //dicarr是从大到小\n\t\tvar point = dicarr[index].point;\n\t\tif (point > 14) { //dicarr不能出现癞子牌（point = 15）\n\t\t\tbreak;\n\t\t}\n\t\tvar i = 0;\n\t\tfor (i = start; i > point; i--) {\n\t\t\tnewarr.push({\n\t\t\t\t\"point\": i,\n\t\t\t\t\"count\": 0,\n\t\t\t\t\"cards\": []\n\t\t\t});\n\t\t}\n\t\tnewarr.push(dicarr[index]);\n\t\tstart = point - 1;\n\t\tif (index == dicarr.length - 1 && start >= 0) { //到最小点数时，填充到3\n\t\t\tfor (i = start; i >= 0; i--) {\n\t\t\t\tnewarr.push({\n\t\t\t\t\t\"point\": i,\n\t\t\t\t\t\"count\": 0,\n\t\t\t\t\t\"cards\": []\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn newarr;\n};\n\n/**\n * //把数组number，转换成点数：牌数的数组\t点数3 = 0最小，大王 = 14最大\n * @param arr\n * @private\n */\nddz.RobotGlobal._getPointCountDicArray = function (arr) {\n    var cdic = {};\n    var key;\n    for (var i = 0; i < arr.length; i++) {\n        var num = arr[i];\n        var pos = ddz.GlobalFuncs.numberToValue(num);\n        if (num > 53) {\n            pos = 15;\n        }\n        key = \"\" + pos;\n        var value = cdic[key];\n        if (value) {\n            value.count++;\n            value.cards.push(num);\n        } else {\n            value = {\n                \"count\": 1,\n                \"cards\": [num],\n            };\n            cdic[key] = value;\n        }\n    }\n    // cc.log('@@@@@@@@@@@@@@@@@@@@@@@@@@@@1', JSON.stringify(cdic));\n\n    for (key in cdic) { //把牌排序，避免选2，3张相同点数的时候选上位置上不相连的\n        var cards = cdic[key].cards;\n        if (cards.length > 1) {\n            cards.sort(function(c1, c2) {\n                return c1 - c2;\n            });\n            cards.reverse();\n        }\n    }\n    // cc.log('@@@@@@@@@@@@@@@@@@@@@@@@@@@@2', JSON.stringify(cdic));\n\n    // 组装需要返回的数组\n    var return_arr = [];\n    for (key in cdic) {\n        return_arr.push({\n            \"point\": parseInt(key),\n            \"count\": cdic[key].count,\n            \"cards\": cdic[key].cards\n        });\n    }\n    // cc.log('@@@@@@@@@@@@@@@@@@@@@@@@@@@@3', JSON.stringify(return_arr));\n    return return_arr;\n};\n\nddz.RobotGlobal.getLaiziObject = function(dicarr) {\n    dicarr.sort(ddz.GlobalFuncs._sortByPoint);\n\n    //找出癞子数目\n    var lz_obj = null;\n    var tmp = dicarr[dicarr.length - 1]; //从小到大排列，所以最后一个是value最大\n    if (null != tmp && tmp.point == 15) {\n        lz_obj = {\n            count: tmp.count,\n            point: tmp.point,\n            cards: tmp.cards\n        };\n        tmp.count = 0; //癞子牌留个占位，因为癞子牌可以当做自己用，例如LLL55544,L为6则为66655544，L为3则为55544433\n        tmp.point = ddz.GlobalFuncs.pointToValue(lz_obj.cards[0] - 54);\n        tmp.cards = [];\n    } else {\n        lz_obj = {\n            count: 0,\n            point: -1,\n            cards: []\n        };\n    }\n    return lz_obj;\n};\n\nddz.RobotGlobal.getSubPCArray = function(pcarray) {\n\treturn pcarray.filter(function(item) {\n\t\treturn item.count > 0;\n\t});\n};\n\nddz.RobotGlobal.getPCArrayByPoint = function(cards) {\n\tvar arr = ddz.RobotGlobal._getPointCountDicArray(cards);\n\treturn ddz.RobotGlobal.getSubPCArray(arr);\n};\n\nddz.RobotGlobal.sortByPoint = function(o1, o2) {\n\treturn o1.point - o2.point;\n};\nddz.RobotGlobal.sortByCount = function(o1, o2) {\n\treturn o2.count - o1.count;\n};\n\nddz.RobotGlobal.sortByLength = function(o1, o2) {\n\treturn o2.len - o1.len;\n};\n\n//找最大连对cell_count = 2, 顺子cell_count = 1， 不包括2和双王, \nddz.RobotGlobal.findAvailableContinousDevide = function(newarr, cell_count, lz_obj) {\n\t// 默认是升序排列newarr，如果要找最大的可以倒序\n\tvar return_arr = [];\n\t//index为起始搜索位置\n\t//curIndex是张数\n\tfor (var index = 0; index < 11; index++){\n\t\t// 连子的最小是点数3，最大是A\n\t\tvar lz_use = 0;\n\t\tvar curIndex = 0;\n\t\tvar cards = [];\n\t\tvar point = -1;\n\n\t\twhile (curIndex <= (11 - index)) {\n\t\t\tvar sub_index = index + curIndex;\n\t\t\tvar tmp = newarr[sub_index];\n\t\t\tpoint = tmp.point;\n\t\t\t//还缺几张牌？\n\t\t\t//if need==0：正好\n\t\t\t//if need>0：缺need张\n\t\t\t//if need<0：多了（-need）张\n\t\t\tvar need = cell_count - tmp.count;\n\n\t\t\t//需要用癞子补，则把癞子转换成相应的值\n\t\t\tif (need > 0) {\n\t\t\t\t//剩余癞子数\n\t\t\t\tvar remainLzCnt = lz_obj.count - lz_use;\n\n\t\t\t\t//如果癞子不够或者没有癞子\n\t\t\t\tif(remainLzCnt < need){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t//癞子足够，用癞子补\n\t\t\t\telse{\n\t\t\t\t\t//增加使用计数\n\t\t\t\t\tlz_use += need;\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(point);\n\t\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t\tcards = cards.concat(tmp.cards);\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\t//不需要用癞子补\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(var i = 0;i<cell_count;i++)\n\t\t\t\t{\n\t\t\t\t\tcards.push(tmp.cards[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurIndex++;\n\t\t}\n\n\t\tvar clen = cards.length;\n\t\tif (clen >= 5) {\n\t\t\t// 更新癞子的数量\n\t\t\tlz_obj.count -= lz_use;\n\n\t\t\tvar oneResult = {\n\t\t\t\t'index': index - 1,\n\t\t\t\t'len': curIndex,\n\t\t\t\t'cards': cards\n\t\t\t};\n\t\t\treturn_arr.push(oneResult);\n\t\t}\n\t}\n\n\n\t///////////////////////////////////////////////////////////////////////////////////////////////查找完毕\n\t//没有找到结果\n\tif (return_arr.length<=0) {\n\t\treturn {\n\t\t\t'index': -1,\n\t\t\t'len': 0,\n\t\t\t'cards': []\n\t\t};\n\t}\n\t//按照长度从大到小进行排序\n\telse {\n\t\treturn_arr.sort(this._sortByLength);\n\t}\n\n\t// 返回\n\treturn return_arr[0];\n};\n\n/* \n * 被动出牌：从牌堆中找出可以赢过的牌数组\n * array是指的0-53的值，当然，癞子>53\n * type - 牌型\n * array - 手牌\n */\nddz.RobotGlobal.findWinCardsFromArray = function(type, array) { //从array中找到所有可以赢过type的手牌组成数组传回\n\tddz.LOGD(null, \"in find win cards from arrary\");\n\tvar len = array.length;\n\tvar tmpArr = this._getPointCountDicArray(array);\n\ttmpArr.sort(ddz.GlobalFuncs._sortByPoint);\n\n\t//[20140521][jinrifeng] 癞子处理 使用接口\n\tvar lz_obj = this.getLaiziObject(tmpArr);\n\t// 单独处理火箭和火箭致胜的情况\n\tif( type.getType() == ddz.Enums.PaixingType.ROCKET ){\n\t\treturn []; \t// 火箭最大，管不上\n\t}\n\n\t// 火箭致胜：火箭+一手牌，先出火箭\n\tvar return_arr = [];\n\tif(this.rocketWin(array, true)){\n\t\treturn_arr.push([52, 53]);\n\t\tvar leftCards = array.slice(0, len - 2);\n\t\ttmpArr = this._getPointCountDicArray(leftCards);\n\t\ttmpArr.sort(ddz.GlobalFuncs._sortByPoint);\n\t}\n\n\tswitch (type.getType()) {\n\t\t//单牌\n\t\tcase ddz.Enums.PaixingType.SINGLE_CARD:\n\t\t\treturn return_arr.concat(this.findWinSingle(type, tmpArr, lz_obj));\n\n\t\t//对牌\n\t\tcase ddz.Enums.PaixingType.DOUBLE_CARD:\n\t\t\treturn return_arr.concat(this.findWinDouble(type, tmpArr, lz_obj));\n\n\t\t//三张，三带一，三带二\n\t\tcase ddz.Enums.PaixingType.THREE_CARD:\n\t\tcase ddz.Enums.PaixingType.THREE_ONE_CARD:\n\t\tcase ddz.Enums.PaixingType.THREE_TWO_CARD:\n\t\t\treturn return_arr.concat(this.findWinThree(type, tmpArr, lz_obj));\n\n\t\t//4张，4带2单， 4带2对\n\t\tcase ddz.Enums.PaixingType.BOMB_CARD:\n\t\t\treturn return_arr.concat(this.findWinBomb(type, tmpArr, lz_obj));\n\t\tcase ddz.Enums.PaixingType.BOMB_TWO_CARD:\n\t\tcase ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD:\n\t\t\tvar bombexts = this.findWinBomb(type, tmpArr, lz_obj);\n\t\t\treturn_arr = return_arr.concat(bombexts);\n\t\t\tvar bombs = this.findBomb(tmpArr, lz_obj);\n\t\t\treturn_arr = return_arr.concat(bombs);\n\t\t\treturn return_arr;\n\n\t\t//顺子，连对，飞机毛都不带，飞机带2单，飞机带2对\n\t\tcase ddz.Enums.PaixingType.SHUNZI_CARD:\n\t\tcase ddz.Enums.PaixingType.LIANDUI_CARD:\n\t\tcase ddz.Enums.PaixingType.AIRCRAFT_CARD:\n\t\tcase ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD:\n\t\tcase ddz.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD:\n\t\t\treturn return_arr.concat(this.findWinContinous(type, tmpArr, lz_obj));\n\n\t\tdefault:\n\t\t\treturn return_arr;\n\t}\n};\n\n//被动出牌：单牌\n//从array中找到管type的手牌集合，策略是先找大于的单牌，其次再拆散其他牌型\nddz.RobotGlobal.findWinSingle = function(type, pc, lz_obj) {\n\t//返回结果，把每一种能管得住type得牌放入其中\n\tvar return_arr = [];\n\tvar needSingleJoker = true;\n\n\t//优先把单数的牌都push进去\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\tif (t.point > type.getPoint() && t.count == 1) {\n\t\t\treturn_arr.push([t.cards[0]]);\n\t\t}\n\t}\n\n\t//其次拆散非单牌\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\tif (t.point > type.getPoint() && (t.count == 2 || t.count == 3)) {\n\t\t\treturn_arr.push([t.cards[0]]);\n\t\t}\n\t}\n\n\t///////////////////////////////////////////////////////////////考虑癞子\n\t//分为两种情况\n\tif (lz_obj.count >= 1) {\n\t\t//癞子牌不用作癞子，用作它本来的值\n\t\t//癞子的实际pos值\n\t\tvar realPoint = ddz.GlobalFuncs.numberToValue(lz_obj.cards[0]);\n\t\tif (realPoint > type.getPoint()) {\n\t\t\treturn_arr.push([lz_obj.cards[0]]);\n\t\t}\n\t}\n\n\t//最后是炸弹\n\t//不找火箭，因为有大小王则在前面选单会选择\n\tvar bombs = this.findBomb(pc, lz_obj);\n\treturn_arr = return_arr.concat(bombs);\n\n\t//找火箭\n\tif(this.findRocket(pc)){\n\t\treturn_arr.push([52, 53]);\n\t}\n\n\t//查找完毕，返回结果\n\treturn return_arr;\n};\n//被动出牌：对子\nddz.RobotGlobal.findWinDouble = function(type, pc, lz_obj) {\n\tddz.LOGD(null, \"find win double......in robots\");\n\n\tvar return_arr = [];\n\n\t////////////////////////////////////////////////////////////////////简单搜索\n\t//优先把对子的牌都push进去\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\tif (t.point > type.getPoint() && t.count == 2) {\n\t\t\treturn_arr.push([t.cards[0], t.cards[1]]);\n\t\t}\n\t}\n\n\t//////////////////////////////////////////////////////////////////////考虑癞子\n\tif (lz_obj.count >= 1) {\n\t\t//(1)当癞子牌当做癞子使用时,凑对子\n\n\t\tfor(var nIndex = 0; nIndex < pc.length; nIndex++){\n\t\t\tvar t = pc[nIndex];\n\n\t\t\tif (t.point > type.getPoint() && t.count == 1) {\n\t\t\t\t//不能和大小王凑对子\n\t\t\t\tif (t.point == 13 || t.point == 14) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//和其他牌凑对子\n\t\t\t\t//癞子凑对后的count值\n\t\t\t\tvar newCount = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\t\t\t\treturn_arr.push([t.cards[0], newCount]);\n\t\t\t}\n\t\t}\n\n\t\t//（2）当癞子牌不当癞子用时,当lz_obj.count==4时在炸弹中处理\n\t\tif (lz_obj.count == 2 || lz_obj.count == 3) {\n\n\t\t\tvar realPoint = ddz.GlobalFuncs.numberToValue(lz_obj.cards[0]);\n\n\t\t\tif (realPoint > type.getPoint()) {\n\t\t\t\treturn_arr.push([lz_obj.cards[0],lz_obj.cards[1]]);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t//其次拆散3张\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\tif (t.point > type.getPoint() && t.count == 3) {\n\t\t\treturn_arr.push([t.cards[0], t.cards[1]]);\n\t\t}\n\t}\n\n\n\t////////////////////////////////////////////////////////////////////找炸弹及火箭\n\tvar bombs = this.findBomb(pc, lz_obj);\n\treturn_arr = return_arr.concat(bombs);\n\tif (this.findRocket(pc)) {\n\t\treturn_arr.push([52, 53]);\n\t}\n\n\treturn return_arr;\n};\n\n//拷贝一个p-c-c对象\nddz.RobotGlobal.copyOnePCObj = function(dest, src) {\n\tdest.count = src.count;\n\tdest.point = src.point;\n\tdest.cards = [];\n\tif (src.count<=0) {// 复制失败\n\t\treturn;\n\t}\n\tfor (var i = 0;i<src.count; i++) {\n\t\tdest.cards.push(src.cards[i]);\n\t}\n};\n\n//拷贝由（point - count - cards ）对象组成的数组\nddz.RobotGlobal.copyPCArr = function(dest, src) {\n\tddz.LOGD(null, \"复制pcArr\");\n\tfor (var nIndex = 0; nIndex < src.length; nIndex++) {\n\t\tvar pcObj = {};\n\t\tddz.RobotGlobal.copyOnePCObj(pcObj, src[nIndex]);\n\t\tdest.push(pcObj);\n\t}\n};\n\n//被动出牌：三带\nddz.RobotGlobal.findWinThree = function(type, pc, lz_obj) { //找到能管住type的所有三不带, 三带一， 三带二\n\tddz.LOGD(null, \"find win three......in robots\");\n\tvar return_arr = [];\n\t//类型\n\tvar t_type = type.getType();\n\n\t/////////////////////////////////////////////////////////////////不使用癞子\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\t//找三张\n\t\tif (t.point > type.getPoint() && t.count == 3) {\n\t\t\t//一个可能的解\n\t\t\tvar tmp = [t.cards[0], t.cards[1], t.cards[2]];\n\n\t\t\t//////////////////////////找带的牌\n\t\t\t//三带一，找一个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.THREE_ONE_CARD) {\n\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 1, [t.point], true);\n\t\t\t\t//找到了可以带的牌，则当前可能解添加进可带的牌\n\t\t\t\tif(extra.length > 0){\n\t\t\t\t\ttmp.push(extra[0]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//三带二\n\t\t\telse if (t_type == ddz.Enums.PaixingType.THREE_TWO_CARD) {\n\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 1, [t.point], true);\n\t\t\t\t//找到可带的对子，则添加进当前可能解\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t}\n\t\t\t\t//找不到可带的对子，则当前解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n\n\t///////////////////////////////////////////////////////////////使用癞子\n\t//临时保存一下癞子\n\tvar lz_objTmp = {};\n\tthis.copyOnePCObj(lz_objTmp,lz_obj);\n\n\t//（1）癞子牌当做癞子使用，凑三张\n\n\t//（1.1）先凑2原牌+1癞子\n\n\tfor(var nIndex = 0; nIndex < pc.length; nIndex++){\n\t\tvar t = pc[nIndex];\n\n\t\t//先凑三张，再找带的牌\n\n\t\tif(t.point > type.getPoint() && t.count == 2 && (lz_obj.count==1||lz_obj.count==2||lz_obj.count == 3)){\n\n\t\t\t//////////////////////////////(step1)凑三张\n\t\t\t//癞子凑数后的count值\n\t\t\tvar newCount = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\t\t\tvar tmp = [t.cards[0], t.cards[1], newCount];\n\t\t\t//去掉癞子数\n\t\t\tlz_obj.count--;\n\t\t\tlz_obj.cards.pop();\n\n\t\t\t/////////////////////////////(step2)找带的牌\n\t\t\t//三带一，找一个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.THREE_ONE_CARD) {\n\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 1, [t.point], true);\n\t\t\t\t//找到了可以带的牌，则当前可能解添加进可带的牌\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp.push(extra[0]);\n\t\t\t\t}\n\t\t\t\t//没有可带的牌，则当前可能解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//三带二\n\t\t\telse if (t_type == ddz.Enums.PaixingType.THREE_TWO_CARD) {\n\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 1, [t.point], true);\n\t\t\t\t//找到可带的对子，则添加进当前可能解\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t}\n\t\t\t\t//找不到可带的对子，则当前解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\n\t\t\t//恢复原癞子信息\n\t\t\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t\t}\n\t}\n\n\t//（1.2）再凑1原牌+2癞子\n\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\n\tfor(var nIndex = 0; nIndex < pc.length; nIndex++){\n\t\tvar t = pc[nIndex];\n\t\t//////////////////////////////先凑三张，再找带的牌\n\n\t\tif(t.point > type.getPoint() && t.count == 1 && (lz_obj.count == 2 || lz_obj.count == 3)){\n\n\t\t\t//不能和大小王拼三张\n\t\t\tif (t.point == 13 || t.point == 14) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/////////////////////////////（step1）凑三张\n\t\t\t//癞子凑数后的count值\n\t\t\tvar newCount = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\t\t\tvar tmp = [t.cards[0], newCount, newCount];\n\t\t\t//去掉癞子数\n\t\t\tlz_obj.count -= 2;\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\t\t\t/////////////////////////////(step2)找带的牌\n\t\t\t//三带一，找一个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.THREE_ONE_CARD) {\n\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 1, [t.point], true);\n\t\t\t\t//找到了可以带的牌，则当前可能解添加进可带的牌\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp.push(extra[0]);\n\t\t\t\t}\n\t\t\t\t//没有可带的牌，则当前可能解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//三带二\n\t\t\telse if (t_type == ddz.Enums.PaixingType.THREE_TWO_CARD) {\n\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 1, [t.point], true);\n\t\t\t\t//找到可带的对子，则添加进当前可能解\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t}\n\t\t\t\t//找不到可带的对子，则当前解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t\t//恢复原癞子信息\n\t\t\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t\t}\n\t}\n\n\t//（2）假如癞子牌不当做癞子使用，当lz_obj.count==4时在炸弹中处理\n\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\tif (lz_obj.count == 3) {\n\t\tvar realPoint = ddz.GlobalFuncs.numberToValue(lz_obj.cards[0]);\n\n\t\tif (realPoint > type.getPoint()) {\n\t\t\t//初始化三张牌\n\t\t\tvar tmp = [lz_obj.cards[0],lz_obj.cards[1],lz_obj.cards[2]];\n\t\t\tlz_obj.count -= 3;\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\n\t\t\t//再找带的牌\n\t\t\t//三带一，找一个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.THREE_ONE_CARD) {\n\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 1, [], true);\n\t\t\t\t//找到了可以带的牌，则当前可能解添加进可带的牌\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp.push(extra[0]);\n\t\t\t\t}\n\t\t\t\t//没有可带的牌，则当前可能解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//三带二\n\t\t\telse if (t_type == ddz.Enums.PaixingType.THREE_TWO_CARD) {\n\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 1, [], true);\n\t\t\t\t//找到可带的对子，则添加进当前可能解\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t}\n\t\t\t\t//找不到可带的对子，则当前解作废\n\t\t\t\telse {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n\t//恢复癞子\n\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t//////////////////////////////////////////////////////////////////////////////找炸弹及火箭\n\n\tvar bombs = this.findBomb(pc, lz_obj);\n\treturn_arr = return_arr.concat(bombs);\n\tif (this.findRocket(pc)){\n\t\treturn_arr.push([52, 53]);\n\t}\n\treturn return_arr;\n};\n\n// 获取炸弹类型\n// 'pureLzBomb',\t//纯癞子炸弹，大于普通炸弹小于王炸\n// 'normalBomb',\t//普通炸弹，大于癞子炸弹\n// 'softBomb',\t\t//软炸弹，小于普通炸弹，大于其他牌\n// 'notBomb'\t\t//不是炸弹\nddz.RobotGlobal.getBombType = function(type) {\n\t// 不是4张，不可能是炸弹\n\tif (type.getCount() != 4) {\n\t\treturn 'notBomb';\n\t};\n\n\t// 牌型\n\tvar t_type = type.getType();\n\tvar lzcnt = type.getLaiziCnt();\n\t// 是炸弹\n\tif (t_type == ddz.Enums.PaixingType.BOMB_CARD) {\n\t\tif (typeof(lzcnt) == \"undefined\" || lzcnt <= 0) {\n\t\t\treturn 'normalBomb';\n\t\t} else if (lzcnt == 4) {\n\t\t\treturn 'pureLzBomb';\n\t\t}\n\t\treturn 'softBomb';\n\t}\n\t//不是炸弹\n\telse {\n\t\treturn 'notBomb';\n\t}\n};\n\n/***\n * 被动出牌\n * 找到能管住type的所有炸弹, 4带2， 4带2对\n */\nddz.RobotGlobal.findWinBomb = function(type, pc, lz_obj) {\n\tvar return_arr = [];\n\n\t//四带类型\n\tvar t_type = type.getType();\n\t//炸弹类型，在这里获知炸弹类型，纯癞子炸弹 > 普通炸弹 > 癞子炸弹\n\tvar bombType = this.getBombType(type);\n\n\t///////////////////////////////////////////////////////////////////////////不考虑癞子\n\t//先找到四张，再找带的牌\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\n\t\t//找到四张\n\t\tif(t.count == 4){\n\t\t\t//常规四张\n\t\t\tvar tmp = [t.cards[0], t.cards[1], t.cards[2], t.cards[3]];\n\n\t\t\t//////////////////////////找带的牌\n\t\t\t//4带2，找2个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.BOMB_TWO_CARD) {\n\t\t\t\tif(t.point > type.getPoint()){\n\t\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//4带2对\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD) {\n\t\t\t\tif(t.point > type.getPoint()){\n\t\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t\t\ttmp = tmp.concat(extra[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//4毛带不带\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_CARD) {\n\t\t\t\t//上家牌是纯癞子炸弹\n\t\t\t\tif(bombType == 'pureLzBomb'){\n\t\t\t\t\t//如果不使用癞子，那么除了火箭永远都干不过纯癞子炸弹\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t// 软炸弹\n\t\t\t\telse if(bombType == 'softBomb'){\n\t\t\t\t\t//所有常规炸弹(不考虑点数)和部分软炸弹（当前不考虑）\n\t\t\t\t}\n\t\t\t\t//常规炸弹\n\t\t\t\telse if (bombType == 'normalBomb') {\n\t\t\t\t\tif(t.point <= type.getPoint()){\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//不是炸弹啊\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//根本不是四带啊\n\t\t\telse{\n\t\t\t\ttmp = [];\n\t\t\t}\n\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n\n\t//////////////////////////////////////////////////////////////////////////考虑癞子\n\n\t//临时保存一下癞子\n\tvar lz_objTmp = {};\n\tthis.copyOnePCObj(lz_objTmp,lz_obj);\n\n\t//（1）癞子牌当癞子使用\n\t//(1.1)三张原牌+1癞子\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\t//四张纯癞子不应该拆\n\t\tif (t.count == 3 && (lz_obj.count >= 1 && lz_obj.count<4)) {\n\t\t\tvar newCount = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\n\t\t\tvar tmp = [t.cards[0], t.cards[1], t.cards[2], newCount];\n\n\t\t\t//癞子使用更新\n\t\t\tlz_obj.count -= 1;\n\t\t\tlz_obj.cards.pop();\n\n\t\t\t//找带的牌\n\t\t\t//4带2，找2个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.BOMB_TWO_CARD) {\n\t\t\t\tif(t.point > type.getPoint()){\n\t\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//4带2对\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD) {\n\t\t\t\tif(t.point > type.getPoint()){\n\t\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t\t\ttmp = tmp.concat(extra[1]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//4毛带不带\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_CARD) {\n\t\t\t\t//上家牌是纯癞子炸弹\n\t\t\t\tif(bombType == 'pureLzBomb'){\n\t\t\t\t\t//软炸弹干不过\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t// 软炸弹\n\t\t\t\telse if(bombType == 'softBomb'){\n\t\t\t\t\t//只有点数大得软炸弹才能干的过\n\t\t\t\t\tif (t.point<=type.getPoint()) {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//常规炸弹\n\t\t\t\telse if (bombType == 'normalBomb') {\n\t\t\t\t\t//软炸弹干不过常规炸弹\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t//不是炸弹啊\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//根本不是四带\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmp = [];\n\t\t\t}\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t\t//恢复癞子\n\t\t\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t\t}\n\n\t}\n\n\t//(1.2)2张原牌+2癞子\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\tif (t.count == 2 && (lz_obj.count >= 2 && lz_obj.count <= 3)) {\n\t\t\tvar newCount = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\n\t\t\tvar tmp = [t.cards[0], t.cards[1], newCount, newCount];\n\n\t\t\t//癞子使用更新\n\t\t\tlz_obj.count -= 2;\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\n\t\t\t//找带的牌\n\t\t\t//4带2，找2个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.BOMB_TWO_CARD) {\n\t\t\t\tif(t.point > type.getPoint()){\n\t\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//4带2对\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD) {\n\t\t\t\tif(t.point > type.getPoint()){\n\t\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t\t\ttmp = tmp.concat(extra[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//4毛带不带\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_CARD) {\n\t\t\t\t//上家牌是纯癞子炸弹\n\t\t\t\tif(bombType == 'pureLzBomb'){\n\t\t\t\t\t//软炸弹干不过\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t// 软炸弹\n\t\t\t\telse if(bombType == 'softBomb'){\n\t\t\t\t\t//只有点数大得软炸弹才能干的过\n\t\t\t\t\tif (t.point<=type.getPoint()) {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//常规炸弹\n\t\t\t\telse if (bombType == 'normalBomb') {\n\t\t\t\t\t//软炸弹干不过常规炸弹\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t//不是炸弹啊\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttmp = [];\n\t\t\t}\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\n\t\t\t//恢复癞子\n\t\t\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t\t}\n\n\t}\n\n\t//(1.3)1张原牌+3癞子\n\tfor (var i = 0; i < pc.length; i++) {\n\t\tvar t = pc[i];\n\t\tif (t.count == 1 && lz_obj.count == 3) {\n\n\t\t\t//不能和大小王拼四张\n\t\t\tif (t.point == 13 || t.point == 14) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar newCount = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\t\t\t//初始化四张牌\n\t\t\tvar tmp = [t.cards[0], newCount, newCount, newCount];\n\n\t\t\t//癞子使用更新\n\t\t\tlz_obj.count -= 3;\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\n\t\t\t//找带的牌\n\t\t\t//4带2，找2个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.BOMB_TWO_CARD) {\n\t\t\t\tif (t.point > type.getPoint()) {\n\t\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//4带2对\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD) {\n\t\t\t\tif (t.point > type.getPoint()) {\n\t\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 2, [t.point], true);\n\t\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t\t\ttmp = tmp.concat(extra[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//4毛带不带\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_CARD) {\n\t\t\t\t//上家牌是纯癞子炸弹\n\t\t\t\tif(bombType == 'pureLzBomb'){\n\t\t\t\t\t//软炸弹干不过\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t// 软炸弹\n\t\t\t\telse if(bombType == 'softBomb'){\n\t\t\t\t\t//只有点数大得软炸弹才能干的过\n\t\t\t\t\tif (t.point<=type.getPoint()) {\n\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//常规炸弹\n\t\t\t\telse if (bombType == 'normalBomb') {\n\t\t\t\t\t//软炸弹干不过常规炸弹\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t\t//不是炸弹啊\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttmp = [];\n\t\t\t}\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t\t//恢复癞子\n\t\t\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t\t}\n\n\t}\n\n\n\t//（2）癞子不癞\n\tif (lz_obj.count == 4) {\n\t\tvar realPoint = ddz.GlobalFuncs.numberToValue(lz_obj.cards[0]);\n\t\tif (t_type == ddz.Enums.PaixingType.BOMB_CARD) {\n\t\t\treturn_arr.push([lz_obj.cards[0], lz_obj.cards[1], lz_obj.cards[2], lz_obj.cards[3]]);\n\t\t} else if (realPoint>type.getPoint()) {\n\t\t\t//先初始化四张牌\n\t\t\tvar tmp = [lz_obj.cards[0], lz_obj.cards[1], lz_obj.cards[2], lz_obj.cards[3]];\n\n\t\t\t//癞子使用更新\n\t\t\tlz_obj.count -= 4;\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\t\t\tlz_obj.cards.pop();\n\n\t\t\t//再找带的牌\n\t\t\t//4带2，找2个单牌\n\t\t\tif (t_type == ddz.Enums.PaixingType.BOMB_TWO_CARD) {\n\t\t\t\tvar extra = this.findMinSingle(lz_obj,pc, 2, [], true);\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp = tmp.concat(extra);\n\t\t\t\t} else {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//4带2对\n\t\t\telse if (t_type == ddz.Enums.PaixingType.BOMB_TWO_TWO_CARD) {\n\t\t\t\tvar extra = this.findMinDouble(lz_obj,pc, 2, [], true);\n\t\t\t\tif (extra.length > 0) {\n\t\t\t\t\ttmp = tmp.concat(extra[0]);\n\t\t\t\t\ttmp = tmp.concat(extra[1]);\n\t\t\t\t} else {\n\t\t\t\t\ttmp = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tmp.length > 0) {\n\t\t\t\treturn_arr.push(tmp);\n\t\t\t}\n\t\t\t//恢复癞子\n\t\t\tthis.copyOnePCObj(lz_obj,lz_objTmp);\n\t\t}\n\t}\n\n\n\n\t//找火箭\n\tif (this.findRocket(pc)) {\n\t\treturn_arr.push([52, 53]);\n\t}\n\treturn return_arr;\n};\n\n//被动出牌\n////找到能管住type的顺子, 连对， 飞机\nddz.RobotGlobal.findWinContinous = function(type, pc, lz_obj) {\n\tddz.LOGD(null, \"find win continious, type :\" + type.getType() + \" point \" + type.getPoint() + \" count \" + type.getCount());\n\t//顺子为array长度，连对为array长度/2， 飞机为array长度/4\n\tvar continue_count;\n\n\t//顺子为1， 连对为2， 飞机为3\n\tvar cell_count;\n\tvar t_type = type.getType();\n\tswitch (t_type) {\n\t\t//顺子\n\t\tcase ddz.Enums.PaixingType.SHUNZI_CARD:\n\t\t\tcontinue_count = type.getCount();\n\t\t\tcell_count = 1;\n\t\t\tbreak;\n\n\t\t//连对\n\t\tcase ddz.Enums.PaixingType.LIANDUI_CARD:\n\t\t\tcontinue_count = type.getCount() / 2;\n\t\t\tcell_count = 2;\n\t\t\tbreak;\n\n\t\t//飞机\n\t\tcase ddz.Enums.PaixingType.AIRCRAFT_CARD:\n\t\t\tcontinue_count = type.getCount() / 3;\n\t\t\tcell_count = 3;\n\t\t\tbreak;\n\n\t\t//飞机带点东西\n\t\tcase ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD:\n\t\tcase ddz.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD:\n\t\t\tcontinue_count = Math.floor(type.getCount() / 4);\n\t\t\tcell_count = 3;\n\t\t\tbreak;\n\t}\n\tvar return_arr = [];\n\tvar newarr = this._fillDicarr(pc);\n\tnewarr.reverse(); //因为从小到大找起，所以要reverse\n\tfor (var index = 0; index + continue_count <= newarr.length  - 3; index++) {\t// 2不能在顺子连对飞机中\n\t\tvar point = newarr[index].point;\n\t\tif (point <= type.getPoint()) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// 按照使用的癞子数从少到多寻找解\n\t\tfor (var laiziMax = 0; laiziMax <= lz_obj.count; laiziMax++) {\n\t\t\tvar cards = [];\n\t\t\tvar exc = [];\n\t\t\tvar lz_used = 0;\n\t\t\tvar sub_index = 0;\n\n\t\t\twhile (sub_index < continue_count) {\n\t\t\t\tvar tmp = newarr[index + sub_index];\n\t\t\t\tvar tmp_cards = tmp.cards;\n\t\t\t\tif (tmp.count >= cell_count) {\n\t\t\t\t\tfor (var i = 0; i < cell_count; i++) {\n\t\t\t\t\t\tcards.push(tmp_cards[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar need = cell_count - tmp.count;\n\t\t\t\t\tif ((need == laiziMax) && (lz_obj.count - lz_used >= need)) { //癞子足够的话\n\t\t\t\t\t\tcards = cards.concat(tmp.cards);\n\t\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlz_used += need;\n\t\t\t\t\t} else { //癞子不够用， break\n\t\t\t\t\t\tcards = [];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texc.push(tmp.point);\n\t\t\t\tsub_index++;\n\t\t\t} //while\n\n\t\t\tif (cards.length > 0) {\n\t\t\t\tif (t_type == ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD || t_type == ddz.Enums.PaixingType.AIRCRAFT_DOUBLE_CARD) { //找翅膀\n\t\t\t\t\t//不能把飞机找齐了，再去找翅膀，因为翅膀可能会拆掉3个生成\n\t\t\t\t\tvar newlz = {\"point\" : lz_obj.point, \"count\":lz_obj.count - lz_used, \"cards\":lz_obj.cards};\n\t\t\t\t\tvar extra = t_type == ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD ? this.findMinSingle(newlz, pc, continue_count, exc, true) : this.findMinDouble(newlz, pc, continue_count, exc, true);\n\t\t\t\t\tif(extra.length > 0) {\n\t\t\t\t\t\tif (t_type == ddz.Enums.PaixingType.AIRCRAFT_SINGLE_CARD) {\n\t\t\t\t\t\t\t//飞机带单牌可以直接这么拼\n\t\t\t\t\t\t\tcards = cards.concat(extra);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t//飞机带俩／仨对，需要单独拼接\n\t\t\t\t\t\t\tfor (var i=0; i<continue_count&&extra[i]; i++) {\n\t\t\t\t\t\t\t\t// 此时返回的是元素是数组的数组[[13,26],[30,43]]\n\t\t\t\t\t\t\t\tcards = cards.concat(extra[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\t//找不够翅膀，清空cards\n\t\t\t\t\t\tcards = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(cards.length > 0) {\n\t\t\t\t\treturn_arr.push(cards);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 找炸弹解\n\tvar bombs = this.findBomb(pc, lz_obj);\n\treturn_arr = return_arr.concat(bombs);\n\n\t// 找火箭解\n\tif (this.findRocket(pc)){\n\t\treturn_arr.push([52, 53]);\n\t}\n\treturn return_arr;\n};\n\nddz.RobotGlobal.findBomb = function(pcArray, lz_obj) {\n\tvar return_arr = [];\n\n\tfor(var laiziMax = 0; laiziMax <= lz_obj.count; laiziMax++){\n\t\tvar newarr = this._fillDicarr(pcArray);\n\t\tfor (var i = newarr.length - 1; i >= 2; i--) { //最后找炸弹\n\t\t\tvar t = newarr[i];\n\t\t\tvar need = 4 - t.count;\n\t\t\tif ((need == laiziMax) && (need < 4) && (need <= lz_obj.count)) {\n\t\t\t\tvar cards = t.cards.slice(0);\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(t.point);\n\t\t\t\tfor(var j = 0; j < need; j++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t\treturn_arr.push(cards);\n\t\t\t}\n\t\t}\n\t}\n\n\t// 癞子炸弹\n\tif(lz_obj.count == 4) {\n\t\tvar c = lz_obj.cards[0];\n\t\treturn_arr.push([c, c, c, c]);\n\t}\n\treturn return_arr;\n};\n\nddz.RobotGlobal.findRocket = function(pcArray) {\n\tvar bking = false;\n\tvar rking = false;\n\tfor (var i = pcArray.length - 1; i >= 0; i--) { //最后找火箭\n\t\tvar t = pcArray[i];\n\t\t//有问题,容错\n\t\tif (t && t.point == 14) {\n\t\t\trking = true;\n\t\t}\n\t\telse if (t && t.point == 13) {\n\t\t\tbking = true;\n\t\t}\n\t\tif (rking && bking) { //一旦找到就break出去\n\t\t\tbreak;\n\t\t}\n\t}\n\tvar ret = bking && rking;\n\treturn ret;\n};\n\n//[20140521][jinrifeng]添加癞子参数(pLaizi)和处理\n//找最小的单牌，用来给三带一， 四带二，飞机带等等, bDivide表示是否拆分，如果不拆分，则不需要ex参数\n//pcArray为已经转换好的point-count数组，按point排好序。count为数量， ex为需要排除的点数， 策略是从小到大找单牌，然后再拆牌\n//包含癞子的情况，如果是主动出牌，先寻找单牌，如果没有\nddz.RobotGlobal.findMinSingle = function(pLaizi, pcArray, count, ex, bDivide) { //如果pcArray是从小到大排列，则是从最小取。 如果是从大到小排列，则是从最大取\n\tvar newarr = pcArray.slice(0);\n\t// 把newarr按照生序排列\n\tnewarr.sort(this._sortByPoint);\n\tvar returnArr = [];\n\tfor (var i = 0; i < newarr.length; i++) {\n\t\tvar t = newarr[i];\n\t\tif (t.count != 1 || (bDivide && ex.indexOf(t.point) >= 0) //只有需要拆分的时候，才需要去判断ex\n\t\t\t|| t.point == 15) { //在找单牌时，先排除癞子。\n\t\t\tcontinue;\n\t\t}\n\t\treturnArr.push(t.cards[0]);\n\t\tif (returnArr.length >= count) {\n\t\t\treturn returnArr;\n\t\t}\n\t}\n\n\tif (bDivide) { //单牌不够的时候，拆分对子或者多牌来凑数\n\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\tvar t = newarr[i];\n\t\t\tif (t.count > 1 && ex.indexOf(t.point) < 0) {\n\t\t\t\tvar cards = t.cards;\n\t\t\t\tfor (var j = 0; j < cards.length; j++) {\n\t\t\t\t\treturnArr.push(cards[j]);\n\t\t\t\t\tif (returnArr.length >= count) {\n\t\t\t\t\t\treturn returnArr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn []; //找不到需要的数量，直接返回空数组\n};\n\n//[20140521][jinrifeng]添加癞子参数(pLaizi)和处理\n//找最小的对子牌，用来给三带2， 四带二，飞机带等等， bDivide表示是否拆分3牌，如果不拆分，则不需要ex参数\n//pcArray为已经转换好的point-count数组，按point排好序。count为数量， ex为需要排除的点数， 策略是从小到大找单牌，然后再拆牌\nddz.RobotGlobal.findMinDouble = function(pLaizi, pcArray, count, ex, bDivide) { //如果pcArray是从小到大排列，则是从最小取。 如果是从大到小排列，则是从最大取\n\tvar newarr = pcArray.slice(0);\n\tvar returnArr = [];\n\tvar laizi_use = 0;\n\tfor (var i = 0; i < newarr.length; i++) {\n\t\tvar t = newarr[i];\n\t\tif (t.count != 2 || (bDivide && ex.indexOf(t.point) >= 0) || t.point == 15) { //只有需要拆分的时候，才需要去判断ex\n\t\t\tcontinue;\n\t\t}\n\t\treturnArr.push([t.cards[0], t.cards[1]]);\n\t\tif (returnArr.length >= count) {\n\t\t\treturn returnArr;\n\t\t}\n\t}\n\n\n\t//如果有癞子，寻找单牌后拼接成双牌。\n\tif (pLaizi != null && pLaizi.count > 0) {\n\t\tfor (var i = 0; i < newarr.length; i++) {\n\t\t\tvar t = newarr[i];\n\t\t\tif (t.point != 15 && t.count ==1 && (ex.indexOf(t.point) < 0 || !bDivide)) { //寻找单牌\n\t\t\t\treturnArr.push([t.cards[0],ddz.GlobalFuncs.getLaiziNumByValue(t.point)]);\n\t\t\t\tlaizi_use++;\n\t\t\t\tif (returnArr.length >= count){\n\t\t\t\t\tpLaizi.count -= laizi_use;  //更新癞子数目\n\t\t\t\t\treturn returnArr;\n\t\t\t\t}\n\t\t\t\tif (laizi_use >= pLaizi.count)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (bDivide) { //拆分3牌，不拆分炸弹\n\t\tfor (var i = 0; i < newarr.length; i++) { //单牌不够的时候，拆分3张来凑数, 不拆分炸弹\n\t\t\tvar t = newarr[i];\n\t\t\tif (t.count == 3 && ex.indexOf(t.point) < 0) {\n\t\t\t\tvar cards = t.cards;\n\t\t\t\treturnArr.push([cards[0], cards[1]]);\n\t\t\t\tif (returnArr.length >= count) {\n\t\t\t\t\tpLaizi.count -= laizi_use;  //更新癞子数目\n\t\t\t\t\treturn returnArr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t//需要两个癞子变成对的情况\n\tif (pLaizi != null && pLaizi.count - laizi_use > 1) {\n\t\treturnArr.push([pLaizi.cards[0],pLaizi.cards[1]]);\n\t\tlaizi_use += 2;\n\t\tif (returnArr.length >= count) {\n\t\t\tpLaizi.count -= laizi_use;  //更新癞子数目\n\t\t\treturn returnArr;\n\t\t}\n\t}\n\n\treturn []; //找不到需要的数量，直接返回null\n};\n\nddz.RobotGlobal.findAvailableAircraft = function(newarrpara, lz_obj) {\n\tvar newarr = [];\n\tthis.copyPCArr(newarr, newarrpara);\n\n\tvar resultObj = this.findAvailableContinous(newarr, 3, lz_obj);\n\tvar return_arr = resultObj.cards;\n\n\tfor (var i = 0; i < return_arr.length; i++) {\n\n\t\tvar num = return_arr[i];\n\t\tvar point = ddz.GlobalFuncs.numberToValue(num);\n\n\t\tnewarr[point].count = 0; // 将数量置为0\n\t\tnewarr[point].cards = [];\n\t}\n\n\n\t//寻找翅膀,先找对子，再找单数\n\tvar len = return_arr.length;\n\n\tif (len > 0) {\n\t\tvar pairs = this.findMinDouble(lz_obj, newarr, len / 3, [], false); // 找带的对子\n\t\tvar p_length = pairs.length;\n\t\tif (p_length > 0) {\n\t\t\tfor (var k = 0; k < p_length; k++) {\n\t\t\t\treturn_arr = return_arr.concat(pairs[k]);\n\t\t\t}\n\t\t\treturn return_arr;\n\t\t}\n\t\tvar singles = this.findMinSingle(lz_obj, newarr, len / 3, [], false); //[1,2,3,4]...\n\t\tif (singles.length > 0) {\n\t\t\treturn_arr = return_arr.concat(singles);\n\t\t\treturn return_arr;\n\t\t}\n\t}\n\treturn return_arr;\n};\n\n//找最大连对cell_count = 2, 顺子cell_count = 1， 不包括2和双王, \nddz.RobotGlobal.findAvailableContinous = function(newarr, cell_count, lz_obj) {\n\tvar index_report = -1;\n\t// 默认是升序排列newarr，如果要找最大的可以倒序\n\tfor (var index = 0; index < 11; index++) {\n\t\t// 连子的最小是点数3，最大是A\n\t\tvar lz_use = 0;\n\t\tvar i = 0;\n\t\tvar cards = [];\n\t\tvar point = -1;\n\n\t\twhile (i <= (11 - index)) {\n\t\t\tvar sub_index = index + i;\n\t\t\tvar tmp = newarr[sub_index];\n\n\t\t\tvar need = cell_count - tmp.count;\n\t\t\tif (need < 0) {\n\t\t\t\t// 不要拆更多张数的主牌型，比如找飞机时不要拆炸弹，找连对时，不要拆3张\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlz_use += need;\n\t\t\tif (lz_use > lz_obj.count) {\n\t\t\t\t//  不够时要还原回去\n\t\t\t\tlz_use -= need;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint = tmp.point;\n\n\t\t\tif (need > 0) {\n\t\t\t\t//需要用癞子补，则把癞子转换成相应的值\n\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(point);\n\t\t\t\tfor (var j = 0; j < need; j++) {\n\t\t\t\t\tcards.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcards = cards.concat(tmp.cards);\n\t\t\ti++;\n\t\t}\n\n\t\tvar clen = cards.length;\n\t\tif (clen >= 5) {\n\t\t\t// 更新癞子的数量\n\t\t\tlz_obj.count -= lz_use;\n\t\t\treturn {\n\t\t\t\t'index': index - 1,\n\t\t\t\t'len': i,\n\t\t\t\t'cards': cards\n\t\t\t};\n\t\t}\n\t}\n\n\t// 找不到时返回空数组\n\treturn {\n\t\t'index': -1,\n\t\t'len': 0,\n\t\t'cards': []\n\t};\n};\n\n\n// 在此之前是检查连对、飞机、顺子等牌型\nddz.RobotGlobal.findAvailableThree = function(newarrpara, lz_obj) {\n\tvar newarr = [];\n\tthis.copyPCArr(newarr, newarrpara);\n\tvar return_arr = [];\n\tvar index;\n\tvar tmp;\n\tvar cards = [];\n\tvar leftArr;\n\n\t// 先找本身就是3个的，之后再用癞子拼, 找到小王就可以了\n\tfor (index = 0; index < 13; index++) {\n\t\ttmp = newarr[index];\n\t\tif (tmp.count == 3)\n\t\t\tbreak;\n\t}\n\n\tif (index < 13) {\n\t\tvar midResult = newarr[index];\n\n\t\t// 找到了\n\t\treturn_arr = return_arr.concat(midResult.cards);\n\n\t\t// 清理数据\n\t\tnewarr[index].cards = [];\n\t\tnewarr[index].count = 0;\n\t} else {\n\t\t// 需要拼\n\t\tfor (index = 0; index < 13; index++) {\n\t\t\ttmp = newarr[index];\n\t\t\tvar need = 3 - tmp.count;\n\n\t\t\tif (need < 0) {\n\t\t\t\t// 不能拆炸弹\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (need <= lz_obj.count) {\n\t\t\t\t//癞子够拼\n\t\t\t\tcards = tmp.cards.slice(0);\n\t\t\t\tif (need > 0) {\n\t\t\t\t\tvar n = ddz.GlobalFuncs.getLaiziNumByValue(tmp.point);\n\t\t\t\t\tfor (var i = 0; i < need; i++) {\n\t\t\t\t\t\tcards.push(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn_arr = return_arr.concat(cards);\n\n\t\t\t\ttmp.cards = [];\n\t\t\t\ttmp.count = 0;\n\t\t\t\t// 减少癞子的数量\n\t\t\t\tlz_obj.count -= need;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} // end of for\n\n\t\tif (index == 13) {\n\t\t\t// 无法构成3张\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t// 从剩下的牌里面找次牌型\n\t/////////////////////////////////////////  主牌型结束\n\n\n\t//找带的对，没有的话找带的单\n\tvar pairs = this.findMinDouble(lz_obj, newarr, 1, [], false); //[[1, 2], [3, 4]]...\n\tif (pairs.length > 0) {\n\t\treturn_arr = return_arr.concat(pairs[0]);\n\t} else {\n\t\tvar singles = this.findMinSingle(lz_obj, newarr, 1, [], false); //[1,2,3,4]...\n\t\tif (singles.length > 0) {\n\t\t\treturn_arr = return_arr.concat(singles[0]);\n\t\t}\n\t}\n\treturn return_arr;\n};"]}